Index.PACKAGES = {"fpinscala.testing" : [{"name" : "fpinscala.testing.Gen", "object" : "fpinscala\/testing\/Gen$.html", "members_object" : [{"label" : "unit", "tail" : "(a: => A): Gen[A]", "member" : "fpinscala.testing.Gen.unit", "link" : "fpinscala\/testing\/Gen$.html#unit[A](a:=>A):fpinscala.testing.Gen[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/testing\/Gen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/testing\/Gen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/testing\/Gen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/testing\/Gen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/testing\/Gen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/testing\/Gen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/testing\/Gen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Gen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Gen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Gen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/testing\/Gen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/testing\/Gen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/testing\/Gen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/testing\/Gen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/testing\/Gen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/testing\/Gen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/testing\/Gen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/testing\/Gen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/testing\/Gen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/testing\/Gen.html", "kind" : "object", "members_trait" : [{"label" : "flatMap", "tail" : "(f: (A) => Gen[B]): Gen[B]", "member" : "fpinscala.testing.Gen.flatMap", "link" : "fpinscala\/testing\/Gen.html#flatMap[A,B](f:A=>fpinscala.testing.Gen[B]):fpinscala.testing.Gen[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Gen[B]", "member" : "fpinscala.testing.Gen.map", "link" : "fpinscala\/testing\/Gen.html#map[A,B](f:A=>B):fpinscala.testing.Gen[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/testing\/Gen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/testing\/Gen.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/testing\/Gen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/testing\/Gen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/testing\/Gen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/testing\/Gen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/testing\/Gen.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Gen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Gen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Gen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/testing\/Gen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/testing\/Gen.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/testing\/Gen.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/testing\/Gen.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/testing\/Gen.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/testing\/Gen.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/testing\/Gen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/testing\/Gen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/testing\/Gen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.testing.Prop", "object" : "fpinscala\/testing\/Prop$.html", "members_object" : [{"label" : "forAll", "tail" : "(gen: Gen[A])(f: (A) => Boolean): Prop", "member" : "fpinscala.testing.Prop.forAll", "link" : "fpinscala\/testing\/Prop$.html#forAll[A](gen:fpinscala.testing.Gen[A])(f:A=>Boolean):fpinscala.testing.Prop", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/testing\/Prop$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/testing\/Prop$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/testing\/Prop$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/testing\/Prop$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/testing\/Prop$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/testing\/Prop$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/testing\/Prop$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Prop$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Prop$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Prop$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/testing\/Prop$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/testing\/Prop$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/testing\/Prop$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/testing\/Prop$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/testing\/Prop$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/testing\/Prop$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/testing\/Prop$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/testing\/Prop$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/testing\/Prop$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/testing\/Prop.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/testing\/Prop.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/testing\/Prop.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/testing\/Prop.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/testing\/Prop.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/testing\/Prop.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/testing\/Prop.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/testing\/Prop.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Prop.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Prop.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/Prop.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/testing\/Prop.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/testing\/Prop.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/testing\/Prop.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/testing\/Prop.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/testing\/Prop.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/testing\/Prop.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/testing\/Prop.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/testing\/Prop.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/testing\/Prop.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.testing.SGen", "trait" : "fpinscala\/testing\/SGen.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/testing\/SGen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/testing\/SGen.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/testing\/SGen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/testing\/SGen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/testing\/SGen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/testing\/SGen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/testing\/SGen.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/SGen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/SGen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/testing\/SGen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/testing\/SGen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/testing\/SGen.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/testing\/SGen.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/testing\/SGen.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/testing\/SGen.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/testing\/SGen.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/testing\/SGen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/testing\/SGen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/testing\/SGen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "fpinscala.datastructures" : [{"name" : "fpinscala.datastructures.Branch", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.datastructures.Branch#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Tree[A]", "member" : "fpinscala.datastructures.Branch.right", "link" : "fpinscala\/datastructures\/Branch.html#right:fpinscala.datastructures.Tree[A]", "kind" : "val"}, {"label" : "left", "tail" : ": Tree[A]", "member" : "fpinscala.datastructures.Branch.left", "link" : "fpinscala\/datastructures\/Branch.html#left:fpinscala.datastructures.Tree[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/datastructures\/Branch.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/Branch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/Branch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/Branch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/Branch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/Branch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/Branch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/Branch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Branch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Branch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Branch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/Branch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/Branch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/Branch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/Branch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/Branch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/Branch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/datastructures\/Branch.html", "kind" : "case class"}, {"name" : "fpinscala.datastructures.Cons", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.datastructures.Cons#<init>", "error" : "unsupported entity"}, {"label" : "tail", "tail" : ": List[A]", "member" : "fpinscala.datastructures.Cons.tail", "link" : "fpinscala\/datastructures\/Cons.html#tail:fpinscala.datastructures.List[A]", "kind" : "val"}, {"label" : "head", "tail" : ": A", "member" : "fpinscala.datastructures.Cons.head", "link" : "fpinscala\/datastructures\/Cons.html#head:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/datastructures\/Cons.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/Cons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/Cons.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/Cons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/Cons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/Cons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/Cons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/Cons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Cons.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Cons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Cons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/Cons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/Cons.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/Cons.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/Cons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/Cons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/Cons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/datastructures\/Cons.html", "kind" : "case class"}, {"name" : "fpinscala.datastructures.Leaf", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.datastructures.Leaf#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "fpinscala.datastructures.Leaf.value", "link" : "fpinscala\/datastructures\/Leaf.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/datastructures\/Leaf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/Leaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/Leaf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/Leaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/Leaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/Leaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/Leaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/Leaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Leaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Leaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Leaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/Leaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/Leaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/Leaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/Leaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/Leaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/Leaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/datastructures\/Leaf.html", "kind" : "case class"}, {"name" : "fpinscala.datastructures.List", "object" : "fpinscala\/datastructures\/List$.html", "members_object" : [{"label" : "map", "tail" : "(l: List[A])(f: (A) => B): List[B]", "member" : "fpinscala.datastructures.List.map", "link" : "fpinscala\/datastructures\/List$.html#map[A,B](l:fpinscala.datastructures.List[A])(f:A=>B):fpinscala.datastructures.List[B]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(l: List[A], z: B)(f: (B, A) => B): B", "member" : "fpinscala.datastructures.List.foldLeft", "link" : "fpinscala\/datastructures\/List$.html#foldLeft[A,B](l:fpinscala.datastructures.List[A],z:B)(f:(B,A)=>B):B", "kind" : "def"}, {"label" : "length", "tail" : "(l: List[A]): Int", "member" : "fpinscala.datastructures.List.length", "link" : "fpinscala\/datastructures\/List$.html#length[A](l:fpinscala.datastructures.List[A]):Int", "kind" : "def"}, {"label" : "init", "tail" : "(l: List[A]): List[A]", "member" : "fpinscala.datastructures.List.init", "link" : "fpinscala\/datastructures\/List$.html#init[A](l:fpinscala.datastructures.List[A]):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(l: List[A], f: (A) => Boolean): List[A]", "member" : "fpinscala.datastructures.List.dropWhile", "link" : "fpinscala\/datastructures\/List$.html#dropWhile[A](l:fpinscala.datastructures.List[A],f:A=>Boolean):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(l: List[A], n: Int): List[A]", "member" : "fpinscala.datastructures.List.drop", "link" : "fpinscala\/datastructures\/List$.html#drop[A](l:fpinscala.datastructures.List[A],n:Int):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "setHead", "tail" : "(l: List[A], h: A): List[A]", "member" : "fpinscala.datastructures.List.setHead", "link" : "fpinscala\/datastructures\/List$.html#setHead[A](l:fpinscala.datastructures.List[A],h:A):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(l: List[A]): List[A]", "member" : "fpinscala.datastructures.List.tail", "link" : "fpinscala\/datastructures\/List$.html#tail[A](l:fpinscala.datastructures.List[A]):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "product2", "tail" : "(ns: List[Double]): Double", "member" : "fpinscala.datastructures.List.product2", "link" : "fpinscala\/datastructures\/List$.html#product2(ns:fpinscala.datastructures.List[Double]):Double", "kind" : "def"}, {"label" : "sum2", "tail" : "(ns: List[Int]): Int", "member" : "fpinscala.datastructures.List.sum2", "link" : "fpinscala\/datastructures\/List$.html#sum2(ns:fpinscala.datastructures.List[Int]):Int", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: List[A], z: B)(f: (A, B) => B): B", "member" : "fpinscala.datastructures.List.foldRight", "link" : "fpinscala\/datastructures\/List$.html#foldRight[A,B](as:fpinscala.datastructures.List[A],z:B)(f:(A,B)=>B):B", "kind" : "def"}, {"label" : "append", "tail" : "(a1: List[A], a2: List[A]): List[A]", "member" : "fpinscala.datastructures.List.append", "link" : "fpinscala\/datastructures\/List$.html#append[A](a1:fpinscala.datastructures.List[A],a2:fpinscala.datastructures.List[A]):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "x", "tail" : ": Int", "member" : "fpinscala.datastructures.List.x", "link" : "fpinscala\/datastructures\/List$.html#x:Int", "kind" : "val"}, {"label" : "apply", "tail" : "(as: A*): List[A]", "member" : "fpinscala.datastructures.List.apply", "link" : "fpinscala\/datastructures\/List$.html#apply[A](as:A*):fpinscala.datastructures.List[A]", "kind" : "def"}, {"label" : "product", "tail" : "(ds: List[Double]): Double", "member" : "fpinscala.datastructures.List.product", "link" : "fpinscala\/datastructures\/List$.html#product(ds:fpinscala.datastructures.List[Double]):Double", "kind" : "def"}, {"label" : "sum", "tail" : "(ints: List[Int]): Int", "member" : "fpinscala.datastructures.List.sum", "link" : "fpinscala\/datastructures\/List$.html#sum(ints:fpinscala.datastructures.List[Int]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/List$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/List$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/List$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/List$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/List$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/List$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/List$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/List$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/List$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/List$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/List$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/List$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/datastructures\/List$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/List$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/datastructures\/List$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/datastructures\/List$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/List$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/List$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/List$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/datastructures\/List.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/List.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/List.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/List.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/List.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/List.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/List.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/List.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/List.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/List.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/List.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/List.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/List.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/datastructures\/List.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/List.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/datastructures\/List.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/datastructures\/List.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/List.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/List.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/List.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.datastructures.Nil", "shortDescription" : "", "object" : "fpinscala\/datastructures\/Nil$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/datastructures\/Nil$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "fpinscala\/datastructures\/Nil$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/Nil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/Nil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/Nil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/Nil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/Nil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/Nil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/Nil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Nil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Nil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Nil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/Nil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/Nil$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/Nil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/datastructures\/Nil$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/Nil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/Nil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/Nil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.datastructures.Tree", "object" : "fpinscala\/datastructures\/Tree$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/Tree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/Tree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/Tree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/Tree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/Tree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/Tree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/Tree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Tree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Tree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Tree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/Tree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/Tree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/datastructures\/Tree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/Tree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/datastructures\/Tree$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/datastructures\/Tree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/Tree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/Tree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/Tree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/datastructures\/Tree.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/datastructures\/Tree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/datastructures\/Tree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/datastructures\/Tree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/datastructures\/Tree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/datastructures\/Tree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/datastructures\/Tree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/datastructures\/Tree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Tree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Tree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/datastructures\/Tree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/datastructures\/Tree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/datastructures\/Tree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/datastructures\/Tree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/datastructures\/Tree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/datastructures\/Tree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/datastructures\/Tree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/datastructures\/Tree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/datastructures\/Tree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/datastructures\/Tree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "fpinscala.state" : [{"name" : "fpinscala.state.Coin", "shortDescription" : "", "object" : "fpinscala\/state\/Coin$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/state\/Coin$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "fpinscala\/state\/Coin$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/Coin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/Coin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/Coin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/Coin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/Coin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/Coin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/Coin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Coin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Coin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Coin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/Coin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/Coin$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/Coin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/state\/Coin$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/Coin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/Coin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/Coin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.state.Input", "trait" : "fpinscala\/state\/Input.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/Input.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/Input.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/Input.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/Input.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/Input.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/Input.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/Input.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Input.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Input.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Input.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/Input.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/Input.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/state\/Input.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/Input.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/state\/Input.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/state\/Input.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/Input.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/Input.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/Input.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.state.Machine", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.state.Machine#<init>", "error" : "unsupported entity"}, {"label" : "coins", "tail" : ": Int", "member" : "fpinscala.state.Machine.coins", "link" : "fpinscala\/state\/Machine.html#coins:Int", "kind" : "val"}, {"label" : "candies", "tail" : ": Int", "member" : "fpinscala.state.Machine.candies", "link" : "fpinscala\/state\/Machine.html#candies:Int", "kind" : "val"}, {"label" : "locked", "tail" : ": Boolean", "member" : "fpinscala.state.Machine.locked", "link" : "fpinscala\/state\/Machine.html#locked:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/state\/Machine.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/Machine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/Machine.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/Machine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/Machine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/Machine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/Machine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/Machine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Machine.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Machine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Machine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/Machine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/Machine.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/Machine.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/Machine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/Machine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/Machine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/state\/Machine.html", "kind" : "case class"}, {"name" : "fpinscala.state.RNG", "object" : "fpinscala\/state\/RNG$.html", "members_object" : [{"label" : "flatMap", "tail" : "(f: Rand[A])(g: (A) => Rand[B]): Rand[B]", "member" : "fpinscala.state.RNG.flatMap", "link" : "fpinscala\/state\/RNG$.html#flatMap[A,B](f:fpinscala.state.RNG.Rand[A])(g:A=>fpinscala.state.RNG.Rand[B]):fpinscala.state.RNG.Rand[B]", "kind" : "def"}, {"label" : "sequence", "tail" : "(fs: List[Rand[A]]): Rand[List[A]]", "member" : "fpinscala.state.RNG.sequence", "link" : "fpinscala\/state\/RNG$.html#sequence[A](fs:List[fpinscala.state.RNG.Rand[A]]):fpinscala.state.RNG.Rand[List[A]]", "kind" : "def"}, {"label" : "map2", "tail" : "(ra: Rand[A], rb: Rand[B])(f: (A, B) => C): Rand[C]", "member" : "fpinscala.state.RNG.map2", "link" : "fpinscala\/state\/RNG$.html#map2[A,B,C](ra:fpinscala.state.RNG.Rand[A],rb:fpinscala.state.RNG.Rand[B])(f:(A,B)=>C):fpinscala.state.RNG.Rand[C]", "kind" : "def"}, {"label" : "ints", "tail" : "(count: Int)(rng: RNG): (List[Int], RNG)", "member" : "fpinscala.state.RNG.ints", "link" : "fpinscala\/state\/RNG$.html#ints(count:Int)(rng:fpinscala.state.RNG):(List[Int],fpinscala.state.RNG)", "kind" : "def"}, {"label" : "double3", "tail" : "(rng: RNG): ((Double, Double, Double), RNG)", "member" : "fpinscala.state.RNG.double3", "link" : "fpinscala\/state\/RNG$.html#double3(rng:fpinscala.state.RNG):((Double,Double,Double),fpinscala.state.RNG)", "kind" : "def"}, {"label" : "doubleInt", "tail" : "(rng: RNG): ((Double, Int), RNG)", "member" : "fpinscala.state.RNG.doubleInt", "link" : "fpinscala\/state\/RNG$.html#doubleInt(rng:fpinscala.state.RNG):((Double,Int),fpinscala.state.RNG)", "kind" : "def"}, {"label" : "intDouble", "tail" : "(rng: RNG): ((Int, Double), RNG)", "member" : "fpinscala.state.RNG.intDouble", "link" : "fpinscala\/state\/RNG$.html#intDouble(rng:fpinscala.state.RNG):((Int,Double),fpinscala.state.RNG)", "kind" : "def"}, {"label" : "double", "tail" : "(rng: RNG): (Double, RNG)", "member" : "fpinscala.state.RNG.double", "link" : "fpinscala\/state\/RNG$.html#double(rng:fpinscala.state.RNG):(Double,fpinscala.state.RNG)", "kind" : "def"}, {"label" : "nonNegativeInt", "tail" : "(rng: RNG): (Int, RNG)", "member" : "fpinscala.state.RNG.nonNegativeInt", "link" : "fpinscala\/state\/RNG$.html#nonNegativeInt(rng:fpinscala.state.RNG):(Int,fpinscala.state.RNG)", "kind" : "def"}, {"label" : "map", "tail" : "(s: Rand[A])(f: (A) => B): Rand[B]", "member" : "fpinscala.state.RNG.map", "link" : "fpinscala\/state\/RNG$.html#map[A,B](s:fpinscala.state.RNG.Rand[A])(f:A=>B):fpinscala.state.RNG.Rand[B]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: A): Rand[A]", "member" : "fpinscala.state.RNG.unit", "link" : "fpinscala\/state\/RNG$.html#unit[A](a:A):fpinscala.state.RNG.Rand[A]", "kind" : "def"}, {"label" : "int", "tail" : ": Rand[Int]", "member" : "fpinscala.state.RNG.int", "link" : "fpinscala\/state\/RNG$.html#int:fpinscala.state.RNG.Rand[Int]", "kind" : "val"}, {"label" : "Rand", "tail" : "", "member" : "fpinscala.state.RNG.Rand", "link" : "fpinscala\/state\/RNG$.html#Rand[+A]=fpinscala.state.RNG=>(A,fpinscala.state.RNG)", "kind" : "type"}, {"label" : "Simple", "tail" : "", "member" : "fpinscala.state.RNG.Simple", "link" : "fpinscala\/state\/RNG$.html#SimpleextendsRNGwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/RNG$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/RNG$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/RNG$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/RNG$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/RNG$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/RNG$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/RNG$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/RNG$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/RNG$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/RNG$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/RNG$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/RNG$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/state\/RNG$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/RNG$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/state\/RNG$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/state\/RNG$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/RNG$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/RNG$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/RNG$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/state\/RNG.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/RNG.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/RNG.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/RNG.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/RNG.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/RNG.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/RNG.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/RNG.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/RNG.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/RNG.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/RNG.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/RNG.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/RNG.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/state\/RNG.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/RNG.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/state\/RNG.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/state\/RNG.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/RNG.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/RNG.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/RNG.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nextInt", "tail" : "(): (Int, RNG)", "member" : "fpinscala.state.RNG.nextInt", "link" : "fpinscala\/state\/RNG.html#nextInt:(Int,fpinscala.state.RNG)", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.state.State", "shortDescription" : "", "object" : "fpinscala\/state\/State$.html", "members_object" : [{"label" : "simulateMachine", "tail" : "(inputs: List[Input]): State[Machine, (Int, Int)]", "member" : "fpinscala.state.State.simulateMachine", "link" : "fpinscala\/state\/State$.html#simulateMachine(inputs:List[fpinscala.state.Input]):fpinscala.state.State[fpinscala.state.Machine,(Int,Int)]", "kind" : "def"}, {"label" : "Rand", "tail" : "", "member" : "fpinscala.state.State.Rand", "link" : "fpinscala\/state\/State$.html#Rand[A]=fpinscala.state.State[fpinscala.state.RNG,A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/State$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/State$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/State$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/State$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/State$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/State$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/State$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/State$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/State$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/State$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/State$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/State$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/state\/State$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/State$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/state\/State$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/state\/State$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/State$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/State$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/State$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "flatMap", "tail" : "(f: (A) => State[S, B]): State[S, B]", "member" : "fpinscala.state.State.flatMap", "link" : "fpinscala\/state\/State.html#flatMap[B](f:A=>fpinscala.state.State[S,B]):fpinscala.state.State[S,B]", "kind" : "def"}, {"label" : "map2", "tail" : "(sb: State[S, B])(f: (A, B) => C): State[S, C]", "member" : "fpinscala.state.State.map2", "link" : "fpinscala\/state\/State.html#map2[B,C](sb:fpinscala.state.State[S,B])(f:(A,B)=>C):fpinscala.state.State[S,C]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): State[S, B]", "member" : "fpinscala.state.State.map", "link" : "fpinscala\/state\/State.html#map[B](f:A=>B):fpinscala.state.State[S,B]", "kind" : "def"}, {"member" : "fpinscala.state.State#<init>", "error" : "unsupported entity"}, {"label" : "run", "tail" : ": (S) => (A, S)", "member" : "fpinscala.state.State.run", "link" : "fpinscala\/state\/State.html#run:S=>(A,S)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/state\/State.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/State.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/State.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/State.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/State.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/state\/State.html", "kind" : "case class"}, {"name" : "fpinscala.state.Turn", "shortDescription" : "", "object" : "fpinscala\/state\/Turn$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/state\/Turn$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "fpinscala\/state\/Turn$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/state\/Turn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/state\/Turn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/state\/Turn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/state\/Turn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/state\/Turn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/state\/Turn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/state\/Turn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Turn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Turn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/state\/Turn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/state\/Turn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/state\/Turn$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/state\/Turn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/state\/Turn$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/state\/Turn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/state\/Turn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/state\/Turn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "fpinscala.monoids" : [{"name" : "fpinscala.monoids.Branch", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.monoids.Branch#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Tree[A]", "member" : "fpinscala.monoids.Branch.right", "link" : "fpinscala\/monoids\/Branch.html#right:fpinscala.monoids.Tree[A]", "kind" : "val"}, {"label" : "left", "tail" : ": Tree[A]", "member" : "fpinscala.monoids.Branch.left", "link" : "fpinscala\/monoids\/Branch.html#left:fpinscala.monoids.Tree[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/monoids\/Branch.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/Branch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/Branch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/Branch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/Branch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/Branch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/Branch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/Branch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Branch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Branch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Branch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/Branch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/Branch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/Branch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/Branch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/Branch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/Branch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/monoids\/Branch.html", "kind" : "case class"}, {"name" : "fpinscala.monoids.Foldable", "trait" : "fpinscala\/monoids\/Foldable.html", "kind" : "trait", "members_trait" : [{"label" : "toList", "tail" : "(as: F[A]): List[A]", "member" : "fpinscala.monoids.Foldable.toList", "link" : "fpinscala\/monoids\/Foldable.html#toList[A](as:F[A]):List[A]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: F[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/monoids\/Foldable.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(as: F[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.monoids.Foldable.foldMap", "link" : "fpinscala\/monoids\/Foldable.html#foldMap[A,B](as:F[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(as: F[A])(z: B)(f: (B, A) => B): B", "member" : "fpinscala.monoids.Foldable.foldLeft", "link" : "fpinscala\/monoids\/Foldable.html#foldLeft[A,B](as:F[A])(z:B)(f:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: F[A])(z: B)(f: (A, B) => B): B", "member" : "fpinscala.monoids.Foldable.foldRight", "link" : "fpinscala\/monoids\/Foldable.html#foldRight[A,B](as:F[A])(z:B)(f:(A,B)=>B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/Foldable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/Foldable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/Foldable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/Foldable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/Foldable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/Foldable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/Foldable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Foldable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Foldable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Foldable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/Foldable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/Foldable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/Foldable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/Foldable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/Foldable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/Foldable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/Foldable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/Foldable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/Foldable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.monoids.IndexedSeqFoldable", "shortDescription" : "", "object" : "fpinscala\/monoids\/IndexedSeqFoldable$.html", "members_object" : [{"label" : "foldMap", "tail" : "(as: IndexedSeq[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.monoids.IndexedSeqFoldable.foldMap", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#foldMap[A,B](as:IndexedSeq[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(as: IndexedSeq[A])(z: B)(f: (B, A) => B): Nothing", "member" : "fpinscala.monoids.IndexedSeqFoldable.foldLeft", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#foldLeft[A,B](as:IndexedSeq[A])(z:B)(f:(B,A)=>B):Nothing", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: IndexedSeq[A])(z: B)(f: (A, B) => B): Nothing", "member" : "fpinscala.monoids.IndexedSeqFoldable.foldRight", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#foldRight[A,B](as:IndexedSeq[A])(z:B)(f:(A,B)=>B):Nothing", "kind" : "def"}, {"label" : "toList", "tail" : "(as: IndexedSeq[A]): List[A]", "member" : "fpinscala.monoids.Foldable.toList", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#toList[A](as:F[A]):List[A]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: IndexedSeq[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/IndexedSeqFoldable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.monoids.Leaf", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.monoids.Leaf#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "fpinscala.monoids.Leaf.value", "link" : "fpinscala\/monoids\/Leaf.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/monoids\/Leaf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/Leaf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/Leaf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/Leaf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/Leaf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/Leaf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/Leaf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/Leaf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Leaf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Leaf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Leaf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/Leaf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/Leaf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/Leaf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/Leaf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/Leaf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/Leaf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/monoids\/Leaf.html", "kind" : "case class"}, {"name" : "fpinscala.monoids.ListFoldable", "shortDescription" : "", "object" : "fpinscala\/monoids\/ListFoldable$.html", "members_object" : [{"label" : "foldMap", "tail" : "(as: List[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.monoids.ListFoldable.foldMap", "link" : "fpinscala\/monoids\/ListFoldable$.html#foldMap[A,B](as:List[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(as: List[A])(z: B)(f: (B, A) => B): Nothing", "member" : "fpinscala.monoids.ListFoldable.foldLeft", "link" : "fpinscala\/monoids\/ListFoldable$.html#foldLeft[A,B](as:List[A])(z:B)(f:(B,A)=>B):Nothing", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: List[A])(z: B)(f: (A, B) => B): Nothing", "member" : "fpinscala.monoids.ListFoldable.foldRight", "link" : "fpinscala\/monoids\/ListFoldable$.html#foldRight[A,B](as:List[A])(z:B)(f:(A,B)=>B):Nothing", "kind" : "def"}, {"label" : "toList", "tail" : "(as: List[A]): List[A]", "member" : "fpinscala.monoids.Foldable.toList", "link" : "fpinscala\/monoids\/ListFoldable$.html#toList[A](as:F[A]):List[A]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: List[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/monoids\/ListFoldable$.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/ListFoldable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/ListFoldable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/ListFoldable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/ListFoldable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/ListFoldable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/ListFoldable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/ListFoldable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/ListFoldable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/ListFoldable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/ListFoldable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/ListFoldable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/ListFoldable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/ListFoldable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/ListFoldable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/ListFoldable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/ListFoldable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/ListFoldable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/ListFoldable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/ListFoldable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.monoids.Monoid", "object" : "fpinscala\/monoids\/Monoid$.html", "members_object" : [{"label" : "bag", "tail" : "(as: IndexedSeq[A]): Map[A, Int]", "member" : "fpinscala.monoids.Monoid.bag", "link" : "fpinscala\/monoids\/Monoid$.html#bag[A](as:IndexedSeq[A]):Map[A,Int]", "kind" : "def"}, {"label" : "mapMergeMonoid", "tail" : "(V: Monoid[V]): Monoid[Map[K, V]]", "member" : "fpinscala.monoids.Monoid.mapMergeMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#mapMergeMonoid[K,V](V:fpinscala.monoids.Monoid[V]):fpinscala.monoids.Monoid[Map[K,V]]", "kind" : "def"}, {"label" : "functionMonoid", "tail" : "(B: Monoid[B]): Monoid[(A) => B]", "member" : "fpinscala.monoids.Monoid.functionMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#functionMonoid[A,B](B:fpinscala.monoids.Monoid[B]):fpinscala.monoids.Monoid[A=>B]", "kind" : "def"}, {"label" : "productMonoid", "tail" : "(A: Monoid[A], B: Monoid[B]): Monoid[(A, B)]", "member" : "fpinscala.monoids.Monoid.productMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#productMonoid[A,B](A:fpinscala.monoids.Monoid[A],B:fpinscala.monoids.Monoid[B]):fpinscala.monoids.Monoid[(A,B)]", "kind" : "def"}, {"label" : "count", "tail" : "(s: String): Int", "member" : "fpinscala.monoids.Monoid.count", "link" : "fpinscala\/monoids\/Monoid$.html#count(s:String):Int", "kind" : "def"}, {"label" : "wcMonoid", "tail" : ": Monoid[WC]", "member" : "fpinscala.monoids.Monoid.wcMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#wcMonoid:fpinscala.monoids.Monoid[fpinscala.monoids.Monoid.WC]", "kind" : "val"}, {"label" : "parFoldMap", "tail" : "(v: IndexedSeq[A], m: Monoid[B])(f: (A) => B): Par[B]", "member" : "fpinscala.monoids.Monoid.parFoldMap", "link" : "fpinscala\/monoids\/Monoid$.html#parFoldMap[A,B](v:IndexedSeq[A],m:fpinscala.monoids.Monoid[B])(f:A=>B):fpinscala.parallelism.Nonblocking.Par[B]", "kind" : "def"}, {"label" : "par", "tail" : "(m: Monoid[A]): Monoid[Par[A]]", "member" : "fpinscala.monoids.Monoid.par", "link" : "fpinscala\/monoids\/Monoid$.html#par[A](m:fpinscala.monoids.Monoid[A]):fpinscala.monoids.Monoid[fpinscala.parallelism.Nonblocking.Par[A]]", "kind" : "def"}, {"label" : "Part", "tail" : "", "member" : "fpinscala.monoids.Monoid.Part", "link" : "fpinscala\/monoids\/Monoid$.html#PartextendsMonoid.WCwithProductwithSerializable", "kind" : "case class"}, {"label" : "Stub", "tail" : "", "member" : "fpinscala.monoids.Monoid.Stub", "link" : "fpinscala\/monoids\/Monoid$.html#StubextendsMonoid.WCwithProductwithSerializable", "kind" : "case class"}, {"label" : "WC", "tail" : "", "member" : "fpinscala.monoids.Monoid.WC", "link" : "fpinscala\/monoids\/Monoid$.html#WCextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ordered", "tail" : "(ints: IndexedSeq[Int]): Boolean", "member" : "fpinscala.monoids.Monoid.ordered", "link" : "fpinscala\/monoids\/Monoid$.html#ordered(ints:IndexedSeq[Int]):Boolean", "kind" : "def"}, {"label" : "foldMapV", "tail" : "(as: IndexedSeq[A], m: Monoid[B])(f: (A) => B): B", "member" : "fpinscala.monoids.Monoid.foldMapV", "link" : "fpinscala\/monoids\/Monoid$.html#foldMapV[A,B](as:IndexedSeq[A],m:fpinscala.monoids.Monoid[B])(f:A=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(as: List[A])(z: B)(f: (B, A) => B): B", "member" : "fpinscala.monoids.Monoid.foldLeft", "link" : "fpinscala\/monoids\/Monoid$.html#foldLeft[A,B](as:List[A])(z:B)(f:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: List[A])(z: B)(f: (A, B) => B): B", "member" : "fpinscala.monoids.Monoid.foldRight", "link" : "fpinscala\/monoids\/Monoid$.html#foldRight[A,B](as:List[A])(z:B)(f:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldMap", "tail" : "(as: List[A], m: Monoid[B])(f: (A) => B): B", "member" : "fpinscala.monoids.Monoid.foldMap", "link" : "fpinscala\/monoids\/Monoid$.html#foldMap[A,B](as:List[A],m:fpinscala.monoids.Monoid[B])(f:A=>B):B", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: List[A], m: Monoid[A]): A", "member" : "fpinscala.monoids.Monoid.concatenate", "link" : "fpinscala\/monoids\/Monoid$.html#concatenate[A](as:List[A],m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "trimMonoid", "tail" : "(s: String): Monoid[String]", "member" : "fpinscala.monoids.Monoid.trimMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#trimMonoid(s:String):fpinscala.monoids.Monoid[String]", "kind" : "def"}, {"label" : "monoidLaws", "tail" : "(m: Monoid[A], gen: Gen[A]): Prop", "member" : "fpinscala.monoids.Monoid.monoidLaws", "link" : "fpinscala\/monoids\/Monoid$.html#monoidLaws[A](m:fpinscala.monoids.Monoid[A],gen:fpinscala.testing.Gen[A]):fpinscala.monoids.Monoid.Prop", "kind" : "def"}, {"label" : "Prop", "tail" : "", "member" : "fpinscala.monoids.Monoid.Prop", "link" : "fpinscala\/monoids\/Monoid$.html#PropextendsAnyRef", "kind" : "trait"}, {"label" : "endoMonoid", "tail" : "(): Monoid[(A) => A]", "member" : "fpinscala.monoids.Monoid.endoMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#endoMonoid[A]:fpinscala.monoids.Monoid[A=>A]", "kind" : "def"}, {"label" : "optionMonoid", "tail" : "(): Monoid[Option[A]]", "member" : "fpinscala.monoids.Monoid.optionMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#optionMonoid[A]:fpinscala.monoids.Monoid[Option[A]]", "kind" : "def"}, {"label" : "booleanAnd", "tail" : ": Monoid[Boolean]", "member" : "fpinscala.monoids.Monoid.booleanAnd", "link" : "fpinscala\/monoids\/Monoid$.html#booleanAnd:fpinscala.monoids.Monoid[Boolean]", "kind" : "val"}, {"label" : "booleanOr", "tail" : ": Monoid[Boolean]", "member" : "fpinscala.monoids.Monoid.booleanOr", "link" : "fpinscala\/monoids\/Monoid$.html#booleanOr:fpinscala.monoids.Monoid[Boolean]", "kind" : "val"}, {"label" : "intMultiplication", "tail" : ": Monoid[Int]", "member" : "fpinscala.monoids.Monoid.intMultiplication", "link" : "fpinscala\/monoids\/Monoid$.html#intMultiplication:fpinscala.monoids.Monoid[Int]", "kind" : "val"}, {"label" : "intAddition", "tail" : ": Monoid[Int]", "member" : "fpinscala.monoids.Monoid.intAddition", "link" : "fpinscala\/monoids\/Monoid$.html#intAddition:fpinscala.monoids.Monoid[Int]", "kind" : "val"}, {"label" : "listMonoid", "tail" : "(): Monoid[List[A]] { val zero: scala.collection.immutable.Nil.type }", "member" : "fpinscala.monoids.Monoid.listMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#listMonoid[A]:fpinscala.monoids.Monoid[List[A]]{valzero:scala.collection.immutable.Nil.type}", "kind" : "def"}, {"label" : "stringMonoid", "tail" : ": Monoid[String] { val zero: String }", "member" : "fpinscala.monoids.Monoid.stringMonoid", "link" : "fpinscala\/monoids\/Monoid$.html#stringMonoid:fpinscala.monoids.Monoid[String]{valzero:String}", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/Monoid$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/Monoid$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/Monoid$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/Monoid$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/Monoid$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/Monoid$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/Monoid$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Monoid$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Monoid$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Monoid$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/Monoid$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/Monoid$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/Monoid$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/Monoid$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/Monoid$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/Monoid$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/Monoid$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/Monoid$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/Monoid$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/monoids\/Monoid.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/Monoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/Monoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/Monoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/Monoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/Monoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/Monoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/Monoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Monoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Monoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Monoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/Monoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/Monoid.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/Monoid.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/Monoid.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/Monoid.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/Monoid.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/Monoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/Monoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/Monoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zero", "tail" : "(): A", "member" : "fpinscala.monoids.Monoid.zero", "link" : "fpinscala\/monoids\/Monoid.html#zero:A", "kind" : "abstract def"}, {"label" : "op", "tail" : "(a1: A, a2: A): A", "member" : "fpinscala.monoids.Monoid.op", "link" : "fpinscala\/monoids\/Monoid.html#op(a1:A,a2:A):A", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.monoids.OptionFoldable", "shortDescription" : "", "object" : "fpinscala\/monoids\/OptionFoldable$.html", "members_object" : [{"label" : "foldRight", "tail" : "(as: Option[A])(z: B)(f: (A, B) => B): Nothing", "member" : "fpinscala.monoids.OptionFoldable.foldRight", "link" : "fpinscala\/monoids\/OptionFoldable$.html#foldRight[A,B](as:Option[A])(z:B)(f:(A,B)=>B):Nothing", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(as: Option[A])(z: B)(f: (B, A) => B): Nothing", "member" : "fpinscala.monoids.OptionFoldable.foldLeft", "link" : "fpinscala\/monoids\/OptionFoldable$.html#foldLeft[A,B](as:Option[A])(z:B)(f:(B,A)=>B):Nothing", "kind" : "def"}, {"label" : "foldMap", "tail" : "(as: Option[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.monoids.OptionFoldable.foldMap", "link" : "fpinscala\/monoids\/OptionFoldable$.html#foldMap[A,B](as:Option[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "toList", "tail" : "(as: Option[A]): List[A]", "member" : "fpinscala.monoids.Foldable.toList", "link" : "fpinscala\/monoids\/OptionFoldable$.html#toList[A](as:F[A]):List[A]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: Option[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/monoids\/OptionFoldable$.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/OptionFoldable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/OptionFoldable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/OptionFoldable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/OptionFoldable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/OptionFoldable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/OptionFoldable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/OptionFoldable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/OptionFoldable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/OptionFoldable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/OptionFoldable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/OptionFoldable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/OptionFoldable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/OptionFoldable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/OptionFoldable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/OptionFoldable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/OptionFoldable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/OptionFoldable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/OptionFoldable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/OptionFoldable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.monoids.StreamFoldable", "shortDescription" : "", "object" : "fpinscala\/monoids\/StreamFoldable$.html", "members_object" : [{"label" : "foldLeft", "tail" : "(as: Stream[A])(z: B)(f: (B, A) => B): Nothing", "member" : "fpinscala.monoids.StreamFoldable.foldLeft", "link" : "fpinscala\/monoids\/StreamFoldable$.html#foldLeft[A,B](as:Stream[A])(z:B)(f:(B,A)=>B):Nothing", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: Stream[A])(z: B)(f: (A, B) => B): Nothing", "member" : "fpinscala.monoids.StreamFoldable.foldRight", "link" : "fpinscala\/monoids\/StreamFoldable$.html#foldRight[A,B](as:Stream[A])(z:B)(f:(A,B)=>B):Nothing", "kind" : "def"}, {"label" : "toList", "tail" : "(as: Stream[A]): List[A]", "member" : "fpinscala.monoids.Foldable.toList", "link" : "fpinscala\/monoids\/StreamFoldable$.html#toList[A](as:F[A]):List[A]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: Stream[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/monoids\/StreamFoldable$.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "foldMap", "tail" : "(as: Stream[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.monoids.Foldable.foldMap", "link" : "fpinscala\/monoids\/StreamFoldable$.html#foldMap[A,B](as:F[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/StreamFoldable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/StreamFoldable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/StreamFoldable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/StreamFoldable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/StreamFoldable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/StreamFoldable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/StreamFoldable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/StreamFoldable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/StreamFoldable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/StreamFoldable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/StreamFoldable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/StreamFoldable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/StreamFoldable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/StreamFoldable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/StreamFoldable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/StreamFoldable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/StreamFoldable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/StreamFoldable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/StreamFoldable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.monoids.Tree", "trait" : "fpinscala\/monoids\/Tree.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/Tree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/Tree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/Tree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/Tree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/Tree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/Tree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/Tree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Tree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Tree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/Tree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/Tree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/Tree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/Tree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/Tree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/Tree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/Tree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/Tree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/Tree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/Tree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.monoids.TreeFoldable", "shortDescription" : "", "object" : "fpinscala\/monoids\/TreeFoldable$.html", "members_object" : [{"label" : "foldRight", "tail" : "(as: Tree[A])(z: B)(f: (A, B) => B): Nothing", "member" : "fpinscala.monoids.TreeFoldable.foldRight", "link" : "fpinscala\/monoids\/TreeFoldable$.html#foldRight[A,B](as:fpinscala.monoids.Tree[A])(z:B)(f:(A,B)=>B):Nothing", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(as: Tree[A])(z: B)(f: (B, A) => B): Nothing", "member" : "fpinscala.monoids.TreeFoldable.foldLeft", "link" : "fpinscala\/monoids\/TreeFoldable$.html#foldLeft[A,B](as:fpinscala.monoids.Tree[A])(z:B)(f:(B,A)=>B):Nothing", "kind" : "def"}, {"label" : "foldMap", "tail" : "(as: Tree[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.monoids.TreeFoldable.foldMap", "link" : "fpinscala\/monoids\/TreeFoldable$.html#foldMap[A,B](as:fpinscala.monoids.Tree[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "toList", "tail" : "(as: Tree[A]): List[A]", "member" : "fpinscala.monoids.Foldable.toList", "link" : "fpinscala\/monoids\/TreeFoldable$.html#toList[A](as:F[A]):List[A]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: Tree[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/monoids\/TreeFoldable$.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monoids\/TreeFoldable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monoids\/TreeFoldable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monoids\/TreeFoldable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monoids\/TreeFoldable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monoids\/TreeFoldable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monoids\/TreeFoldable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monoids\/TreeFoldable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/TreeFoldable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/TreeFoldable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monoids\/TreeFoldable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monoids\/TreeFoldable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monoids\/TreeFoldable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monoids\/TreeFoldable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monoids\/TreeFoldable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monoids\/TreeFoldable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monoids\/TreeFoldable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monoids\/TreeFoldable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monoids\/TreeFoldable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monoids\/TreeFoldable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "fpinscala.gettingstarted" : [{"name" : "fpinscala.gettingstarted.AnonymousFunctions", "shortDescription" : "", "object" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.gettingstarted.AnonymousFunctions.main", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/gettingstarted\/AnonymousFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.gettingstarted.FormatAbsAndFactorial", "shortDescription" : "", "object" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.gettingstarted.FormatAbsAndFactorial.main", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/gettingstarted\/FormatAbsAndFactorial$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.gettingstarted.MonomorphicBinarySearch", "shortDescription" : "", "object" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html", "members_object" : [{"label" : "binarySearch", "tail" : "(ds: Array[Double], key: Double): Int", "member" : "fpinscala.gettingstarted.MonomorphicBinarySearch.binarySearch", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#binarySearch(ds:Array[Double],key:Double):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/gettingstarted\/MonomorphicBinarySearch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.gettingstarted.MyModule", "shortDescription" : "A documentation comment", "object" : "fpinscala\/gettingstarted\/MyModule$.html", "members_object" : [{"label" : "formatResult", "tail" : "(name: String, n: Int, f: (Int) => Int): String", "member" : "fpinscala.gettingstarted.MyModule.formatResult", "link" : "fpinscala\/gettingstarted\/MyModule$.html#formatResult(name:String,n:Int,f:Int=>Int):String", "kind" : "def"}, {"label" : "fib", "tail" : "(n: Int): Int", "member" : "fpinscala.gettingstarted.MyModule.fib", "link" : "fpinscala\/gettingstarted\/MyModule$.html#fib(n:Int):Int", "kind" : "def"}, {"label" : "factorial", "tail" : "(n: Int): Int", "member" : "fpinscala.gettingstarted.MyModule.factorial", "link" : "fpinscala\/gettingstarted\/MyModule$.html#factorial(n:Int):Int", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.gettingstarted.MyModule.main", "link" : "fpinscala\/gettingstarted\/MyModule$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "abs", "tail" : "(n: Int): Int", "member" : "fpinscala.gettingstarted.MyModule.abs", "link" : "fpinscala\/gettingstarted\/MyModule$.html#abs(n:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/gettingstarted\/MyModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/gettingstarted\/MyModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/gettingstarted\/MyModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/gettingstarted\/MyModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/gettingstarted\/MyModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/gettingstarted\/MyModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/gettingstarted\/MyModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/MyModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/MyModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/MyModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/gettingstarted\/MyModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/gettingstarted\/MyModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/gettingstarted\/MyModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/gettingstarted\/MyModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/gettingstarted\/MyModule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/gettingstarted\/MyModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/gettingstarted\/MyModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/gettingstarted\/MyModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/gettingstarted\/MyModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.gettingstarted.PolymorphicFunctions", "shortDescription" : "", "object" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.main", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "compose", "tail" : "(f: (B) => C, g: (A) => B): (A) => C", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.compose", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#compose[A,B,C](f:B=>C,g:A=>B):A=>C", "kind" : "def"}, {"label" : "uncurry", "tail" : "(f: (A) => (B) => C): (A, B) => C", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.uncurry", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#uncurry[A,B,C](f:A=>(B=>C)):(A,B)=>C", "kind" : "def"}, {"label" : "curry", "tail" : "(f: (A, B) => C): (A) => (B) => C", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.curry", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#curry[A,B,C](f:(A,B)=>C):A=>(B=>C)", "kind" : "def"}, {"label" : "partial1", "tail" : "(a: A, f: (A, B) => C): (B) => C", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.partial1", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#partial1[A,B,C](a:A,f:(A,B)=>C):B=>C", "kind" : "def"}, {"label" : "isSorted", "tail" : "(as: Array[A], gt: (A, A) => Boolean): Boolean", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.isSorted", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#isSorted[A](as:Array[A],gt:(A,A)=>Boolean):Boolean", "kind" : "def"}, {"label" : "binarySearch", "tail" : "(as: Array[A], key: A, gt: (A, A) => Boolean): Int", "member" : "fpinscala.gettingstarted.PolymorphicFunctions.binarySearch", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#binarySearch[A](as:Array[A],key:A,gt:(A,A)=>Boolean):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/gettingstarted\/PolymorphicFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.gettingstarted.TestFib", "shortDescription" : "", "object" : "fpinscala\/gettingstarted\/TestFib$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.gettingstarted.TestFib.main", "link" : "fpinscala\/gettingstarted\/TestFib$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/gettingstarted\/TestFib$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/gettingstarted\/TestFib$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/gettingstarted\/TestFib$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/gettingstarted\/TestFib$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/gettingstarted\/TestFib$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/gettingstarted\/TestFib$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/gettingstarted\/TestFib$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/TestFib$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/TestFib$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/gettingstarted\/TestFib$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/gettingstarted\/TestFib$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/gettingstarted\/TestFib$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/gettingstarted\/TestFib$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/gettingstarted\/TestFib$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/gettingstarted\/TestFib$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/gettingstarted\/TestFib$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/gettingstarted\/TestFib$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/gettingstarted\/TestFib$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/gettingstarted\/TestFib$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "fpinscala.laziness" : [{"name" : "fpinscala.laziness.Cons", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.laziness.Cons#<init>", "error" : "unsupported entity"}, {"label" : "t", "tail" : ": () => Stream[A]", "member" : "fpinscala.laziness.Cons.t", "link" : "fpinscala\/laziness\/Cons.html#t:()=>fpinscala.laziness.Stream[A]", "kind" : "val"}, {"label" : "h", "tail" : ": () => A", "member" : "fpinscala.laziness.Cons.h", "link" : "fpinscala\/laziness\/Cons.html#h:()=>A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/laziness\/Cons.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "startsWith", "tail" : "(s: Stream[B]): Boolean", "member" : "fpinscala.laziness.Stream.startsWith", "link" : "fpinscala\/laziness\/Cons.html#startsWith[B](s:fpinscala.laziness.Stream[B]):Boolean", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "fpinscala.laziness.Stream.headOption", "link" : "fpinscala\/laziness\/Cons.html#headOption:Option[A]", "kind" : "def"}, {"label" : "forAll", "tail" : "(p: (A) => Boolean): Boolean", "member" : "fpinscala.laziness.Stream.forAll", "link" : "fpinscala\/laziness\/Cons.html#forAll(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) => Boolean): Stream[A]", "member" : "fpinscala.laziness.Stream.takeWhile", "link" : "fpinscala\/laziness\/Cons.html#takeWhile(p:A=>Boolean):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Stream[A]", "member" : "fpinscala.laziness.Stream.drop", "link" : "fpinscala\/laziness\/Cons.html#drop(n:Int):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Stream[A]", "member" : "fpinscala.laziness.Stream.take", "link" : "fpinscala\/laziness\/Cons.html#take(n:Int):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): Option[A]", "member" : "fpinscala.laziness.Stream.find", "link" : "fpinscala\/laziness\/Cons.html#find(f:A=>Boolean):Option[A]", "kind" : "final def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "fpinscala.laziness.Stream.exists", "link" : "fpinscala\/laziness\/Cons.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: => B)(f: (A, => B) => B): B", "member" : "fpinscala.laziness.Stream.foldRight", "link" : "fpinscala\/laziness\/Cons.html#foldRight[B](z:=>B)(f:(A,=>B)=>B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/laziness\/Cons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/laziness\/Cons.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/laziness\/Cons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/laziness\/Cons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/laziness\/Cons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/laziness\/Cons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/laziness\/Cons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Cons.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Cons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Cons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/laziness\/Cons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/laziness\/Cons.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/laziness\/Cons.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/laziness\/Cons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/laziness\/Cons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/laziness\/Cons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/laziness\/Cons.html", "kind" : "case class"}, {"name" : "fpinscala.laziness.Empty", "shortDescription" : "", "object" : "fpinscala\/laziness\/Empty$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/laziness\/Empty$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "fpinscala\/laziness\/Empty$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "startsWith", "tail" : "(s: Stream[B]): Boolean", "member" : "fpinscala.laziness.Stream.startsWith", "link" : "fpinscala\/laziness\/Empty$.html#startsWith[B](s:fpinscala.laziness.Stream[B]):Boolean", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Nothing]", "member" : "fpinscala.laziness.Stream.headOption", "link" : "fpinscala\/laziness\/Empty$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "forAll", "tail" : "(p: (Nothing) => Boolean): Boolean", "member" : "fpinscala.laziness.Stream.forAll", "link" : "fpinscala\/laziness\/Empty$.html#forAll(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Nothing) => Boolean): Stream[Nothing]", "member" : "fpinscala.laziness.Stream.takeWhile", "link" : "fpinscala\/laziness\/Empty$.html#takeWhile(p:A=>Boolean):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Stream[Nothing]", "member" : "fpinscala.laziness.Stream.drop", "link" : "fpinscala\/laziness\/Empty$.html#drop(n:Int):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Stream[Nothing]", "member" : "fpinscala.laziness.Stream.take", "link" : "fpinscala\/laziness\/Empty$.html#take(n:Int):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Nothing) => Boolean): Option[Nothing]", "member" : "fpinscala.laziness.Stream.find", "link" : "fpinscala\/laziness\/Empty$.html#find(f:A=>Boolean):Option[A]", "kind" : "final def"}, {"label" : "exists", "tail" : "(p: (Nothing) => Boolean): Boolean", "member" : "fpinscala.laziness.Stream.exists", "link" : "fpinscala\/laziness\/Empty$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: => B)(f: (Nothing, => B) => B): B", "member" : "fpinscala.laziness.Stream.foldRight", "link" : "fpinscala\/laziness\/Empty$.html#foldRight[B](z:=>B)(f:(A,=>B)=>B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/laziness\/Empty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/laziness\/Empty$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/laziness\/Empty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/laziness\/Empty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/laziness\/Empty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/laziness\/Empty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/laziness\/Empty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Empty$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Empty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Empty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/laziness\/Empty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/laziness\/Empty$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/laziness\/Empty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/laziness\/Empty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/laziness\/Empty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/laziness\/Empty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/laziness\/Empty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.laziness.Stream", "object" : "fpinscala\/laziness\/Stream$.html", "members_object" : [{"label" : "unfold", "tail" : "(z: S)(f: (S) => Option[(A, S)]): Stream[A]", "member" : "fpinscala.laziness.Stream.unfold", "link" : "fpinscala\/laziness\/Stream$.html#unfold[A,S](z:S)(f:S=>Option[(A,S)]):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "from", "tail" : "(n: Int): Stream[Int]", "member" : "fpinscala.laziness.Stream.from", "link" : "fpinscala\/laziness\/Stream$.html#from(n:Int):fpinscala.laziness.Stream[Int]", "kind" : "def"}, {"label" : "ones", "tail" : ": Stream[Int]", "member" : "fpinscala.laziness.Stream.ones", "link" : "fpinscala\/laziness\/Stream$.html#ones:fpinscala.laziness.Stream[Int]", "kind" : "val"}, {"label" : "apply", "tail" : "(as: A*): Stream[A]", "member" : "fpinscala.laziness.Stream.apply", "link" : "fpinscala\/laziness\/Stream$.html#apply[A](as:A*):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Stream[A]", "member" : "fpinscala.laziness.Stream.empty", "link" : "fpinscala\/laziness\/Stream$.html#empty[A]:fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "cons", "tail" : "(hd: => A, tl: => Stream[A]): Stream[A]", "member" : "fpinscala.laziness.Stream.cons", "link" : "fpinscala\/laziness\/Stream$.html#cons[A](hd:=>A,tl:=>fpinscala.laziness.Stream[A]):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/laziness\/Stream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/laziness\/Stream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/laziness\/Stream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/laziness\/Stream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/laziness\/Stream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/laziness\/Stream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/laziness\/Stream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Stream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Stream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Stream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/laziness\/Stream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/laziness\/Stream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/laziness\/Stream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/laziness\/Stream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/laziness\/Stream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/laziness\/Stream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/laziness\/Stream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/laziness\/Stream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/laziness\/Stream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/laziness\/Stream.html", "kind" : "trait", "members_trait" : [{"label" : "startsWith", "tail" : "(s: Stream[B]): Boolean", "member" : "fpinscala.laziness.Stream.startsWith", "link" : "fpinscala\/laziness\/Stream.html#startsWith[B](s:fpinscala.laziness.Stream[B]):Boolean", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "fpinscala.laziness.Stream.headOption", "link" : "fpinscala\/laziness\/Stream.html#headOption:Option[A]", "kind" : "def"}, {"label" : "forAll", "tail" : "(p: (A) => Boolean): Boolean", "member" : "fpinscala.laziness.Stream.forAll", "link" : "fpinscala\/laziness\/Stream.html#forAll(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) => Boolean): Stream[A]", "member" : "fpinscala.laziness.Stream.takeWhile", "link" : "fpinscala\/laziness\/Stream.html#takeWhile(p:A=>Boolean):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Stream[A]", "member" : "fpinscala.laziness.Stream.drop", "link" : "fpinscala\/laziness\/Stream.html#drop(n:Int):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Stream[A]", "member" : "fpinscala.laziness.Stream.take", "link" : "fpinscala\/laziness\/Stream.html#take(n:Int):fpinscala.laziness.Stream[A]", "kind" : "def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): Option[A]", "member" : "fpinscala.laziness.Stream.find", "link" : "fpinscala\/laziness\/Stream.html#find(f:A=>Boolean):Option[A]", "kind" : "final def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "fpinscala.laziness.Stream.exists", "link" : "fpinscala\/laziness\/Stream.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: => B)(f: (A, => B) => B): B", "member" : "fpinscala.laziness.Stream.foldRight", "link" : "fpinscala\/laziness\/Stream.html#foldRight[B](z:=>B)(f:(A,=>B)=>B):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/laziness\/Stream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/laziness\/Stream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/laziness\/Stream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/laziness\/Stream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/laziness\/Stream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/laziness\/Stream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/laziness\/Stream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Stream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Stream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/laziness\/Stream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/laziness\/Stream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/laziness\/Stream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/laziness\/Stream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/laziness\/Stream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/laziness\/Stream.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/laziness\/Stream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/laziness\/Stream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/laziness\/Stream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/laziness\/Stream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "fpinscala.applicative" : [{"name" : "fpinscala.applicative.Applicative", "object" : "fpinscala\/applicative\/Applicative$.html", "members_object" : [{"label" : "monoidApplicative", "tail" : "(M: Monoid[M]): Applicative[[x]M]", "member" : "fpinscala.applicative.Applicative.monoidApplicative", "link" : "fpinscala\/applicative\/Applicative$.html#monoidApplicative[M](M:fpinscala.monoids.Monoid[M]):fpinscala.applicative.Applicative[[x]M]", "kind" : "implicit def"}, {"label" : "Const", "tail" : "", "member" : "fpinscala.applicative.Applicative.Const", "link" : "fpinscala\/applicative\/Applicative$.html#Const[A,B]=A", "kind" : "type"}, {"label" : "validationApplicative", "tail" : "(): Applicative[[x]Validation[E, x]]", "member" : "fpinscala.applicative.Applicative.validationApplicative", "link" : "fpinscala\/applicative\/Applicative$.html#validationApplicative[E]:fpinscala.applicative.Applicative[[x]fpinscala.applicative.Validation[E,x]]", "kind" : "def"}, {"label" : "streamApplicative", "tail" : ": Applicative[Stream]", "member" : "fpinscala.applicative.Applicative.streamApplicative", "link" : "fpinscala\/applicative\/Applicative$.html#streamApplicative:fpinscala.applicative.Applicative[Stream]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Applicative$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Applicative$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Applicative$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Applicative$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Applicative$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Applicative$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Applicative$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Applicative$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Applicative$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Applicative$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Applicative$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Applicative$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Applicative$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Applicative$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Applicative$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Applicative$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Applicative$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Applicative$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Applicative$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/applicative\/Applicative.html", "kind" : "trait", "members_trait" : [{"label" : "sequenceMap", "tail" : "(ofa: Map[K, F[V]]): F[Map[K, V]]", "member" : "fpinscala.applicative.Applicative.sequenceMap", "link" : "fpinscala\/applicative\/Applicative.html#sequenceMap[K,V](ofa:Map[K,F[V]]):F[Map[K,V]]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[x]F[G[x]]]", "member" : "fpinscala.applicative.Applicative.compose", "link" : "fpinscala\/applicative\/Applicative.html#compose[G[_]](G:fpinscala.applicative.Applicative[G]):fpinscala.applicative.Applicative[[x]F[G[x]]]", "kind" : "def"}, {"label" : "product", "tail" : "(G: Applicative[G]): Applicative[[x](F[x], G[x])]", "member" : "fpinscala.applicative.Applicative.product", "link" : "fpinscala\/applicative\/Applicative.html#product[G[_]](G:fpinscala.applicative.Applicative[G]):fpinscala.applicative.Applicative[[x](F[x],G[x])]", "kind" : "def"}, {"label" : "factor", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "fpinscala.applicative.Applicative.factor", "link" : "fpinscala\/applicative\/Applicative.html#factor[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "fpinscala.applicative.Applicative.replicateM", "link" : "fpinscala\/applicative\/Applicative.html#replicateM[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(as: List[A])(f: (A) => F[B]): F[List[B]]", "member" : "fpinscala.applicative.Applicative.traverse", "link" : "fpinscala\/applicative\/Applicative.html#traverse[A,B](as:List[A])(f:A=>F[B]):F[List[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(fas: List[F[A]]): F[List[A]]", "member" : "fpinscala.applicative.Applicative.sequence", "link" : "fpinscala\/applicative\/Applicative.html#sequence[A](fas:List[F[A]]):F[List[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.applicative.Applicative.map", "link" : "fpinscala\/applicative\/Applicative.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "apply", "tail" : "(fab: F[(A) => B])(fa: F[A]): F[B]", "member" : "fpinscala.applicative.Applicative.apply", "link" : "fpinscala\/applicative\/Applicative.html#apply[A,B](fab:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => C): F[C]", "member" : "fpinscala.applicative.Applicative.map2", "link" : "fpinscala\/applicative\/Applicative.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "codistribute", "tail" : "(e: Either[F[A], F[B]]): F[Either[A, B]]", "member" : "fpinscala.monads.Functor.codistribute", "link" : "fpinscala\/applicative\/Applicative.html#codistribute[A,B](e:Either[F[A],F[B]]):F[Either[A,B]]", "kind" : "def"}, {"label" : "distribute", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "fpinscala.monads.Functor.distribute", "link" : "fpinscala\/applicative\/Applicative.html#distribute[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Applicative.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Applicative.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Applicative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Applicative.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Applicative.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Applicative.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Applicative.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Applicative.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Applicative.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Applicative.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Applicative.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Applicative.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Applicative.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Applicative.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Applicative.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Applicative.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Applicative.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Applicative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Applicative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unit", "tail" : "(a: => A): F[A]", "member" : "fpinscala.applicative.Applicative.unit", "link" : "fpinscala\/applicative\/Applicative.html#unit[A](a:=>A):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.applicative.Failure", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.applicative.Failure#<init>", "error" : "unsupported entity"}, {"label" : "tail", "tail" : ": Vector[E]", "member" : "fpinscala.applicative.Failure.tail", "link" : "fpinscala\/applicative\/Failure.html#tail:Vector[E]", "kind" : "val"}, {"label" : "head", "tail" : ": E", "member" : "fpinscala.applicative.Failure.head", "link" : "fpinscala\/applicative\/Failure.html#head:E", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/applicative\/Failure.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Failure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Failure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Failure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Failure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Failure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Failure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Failure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Failure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Failure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Failure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Failure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Failure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Failure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Failure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Failure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Failure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/applicative\/Failure.html", "kind" : "case class"}, {"name" : "fpinscala.applicative.Monad", "object" : "fpinscala\/applicative\/Monad$.html", "members_object" : [{"label" : "composeM", "tail" : "(F: Monad[F], N: Monad[N], T: Traverse[N]): Monad[[x]F[N[x]]]", "member" : "fpinscala.applicative.Monad.composeM", "link" : "fpinscala\/applicative\/Monad$.html#composeM[F[_],N[_]](implicitF:fpinscala.applicative.Monad[F],implicitN:fpinscala.applicative.Monad[N],implicitT:fpinscala.applicative.Traverse[N]):fpinscala.applicative.Monad[[x]F[N[x]]]", "kind" : "def"}, {"label" : "stateMonad", "tail" : "(): Monad[[x]State[S, x]]", "member" : "fpinscala.applicative.Monad.stateMonad", "link" : "fpinscala\/applicative\/Monad$.html#stateMonad[S]:fpinscala.applicative.Monad[[x]fpinscala.state.State[S,x]]", "kind" : "def"}, {"label" : "eitherMonad", "tail" : "(): Monad[[x]Either[E, x]]", "member" : "fpinscala.applicative.Monad.eitherMonad", "link" : "fpinscala\/applicative\/Monad$.html#eitherMonad[E]:fpinscala.applicative.Monad[[x]scala.util.Either[E,x]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Monad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Monad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Monad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Monad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Monad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Monad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Monad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Monad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Monad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Monad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Monad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Monad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Monad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Monad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Monad$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Monad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Monad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Monad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Monad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/applicative\/Monad.html", "kind" : "trait", "members_trait" : [{"label" : "apply", "tail" : "(mf: F[(A) => B])(ma: F[A]): F[B]", "member" : "fpinscala.applicative.Monad.apply", "link" : "fpinscala\/applicative\/Monad.html#apply[A,B](mf:F[A=>B])(ma:F[A]):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(f: (A) => F[B], g: (B) => F[C]): (A) => F[C]", "member" : "fpinscala.applicative.Monad.compose", "link" : "fpinscala\/applicative\/Monad.html#compose[A,B,C](f:A=>F[B],g:B=>F[C]):A=>F[C]", "kind" : "def"}, {"label" : "join", "tail" : "(mma: F[F[A]]): F[A]", "member" : "fpinscala.applicative.Monad.join", "link" : "fpinscala\/applicative\/Monad.html#join[A](mma:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(ma: F[A])(f: (A) => F[B]): F[B]", "member" : "fpinscala.applicative.Monad.flatMap", "link" : "fpinscala\/applicative\/Monad.html#flatMap[A,B](ma:F[A])(f:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "sequenceMap", "tail" : "(ofa: Map[K, F[V]]): F[Map[K, V]]", "member" : "fpinscala.applicative.Applicative.sequenceMap", "link" : "fpinscala\/applicative\/Monad.html#sequenceMap[K,V](ofa:Map[K,F[V]]):F[Map[K,V]]", "kind" : "def"}, {"label" : "compose", "tail" : "(G: Applicative[G]): Applicative[[x]F[G[x]]]", "member" : "fpinscala.applicative.Applicative.compose", "link" : "fpinscala\/applicative\/Monad.html#compose[G[_]](G:fpinscala.applicative.Applicative[G]):fpinscala.applicative.Applicative[[x]F[G[x]]]", "kind" : "def"}, {"label" : "product", "tail" : "(G: Applicative[G]): Applicative[[x](F[x], G[x])]", "member" : "fpinscala.applicative.Applicative.product", "link" : "fpinscala\/applicative\/Monad.html#product[G[_]](G:fpinscala.applicative.Applicative[G]):fpinscala.applicative.Applicative[[x](F[x],G[x])]", "kind" : "def"}, {"label" : "factor", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "fpinscala.applicative.Applicative.factor", "link" : "fpinscala\/applicative\/Monad.html#factor[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "fpinscala.applicative.Applicative.replicateM", "link" : "fpinscala\/applicative\/Monad.html#replicateM[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(as: List[A])(f: (A) => F[B]): F[List[B]]", "member" : "fpinscala.applicative.Applicative.traverse", "link" : "fpinscala\/applicative\/Monad.html#traverse[A,B](as:List[A])(f:A=>F[B]):F[List[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(fas: List[F[A]]): F[List[A]]", "member" : "fpinscala.applicative.Applicative.sequence", "link" : "fpinscala\/applicative\/Monad.html#sequence[A](fas:List[F[A]]):F[List[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.applicative.Applicative.map", "link" : "fpinscala\/applicative\/Monad.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => C): F[C]", "member" : "fpinscala.applicative.Applicative.map2", "link" : "fpinscala\/applicative\/Monad.html#map2[A,B,C](fa:F[A],fb:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "codistribute", "tail" : "(e: Either[F[A], F[B]]): F[Either[A, B]]", "member" : "fpinscala.monads.Functor.codistribute", "link" : "fpinscala\/applicative\/Monad.html#codistribute[A,B](e:Either[F[A],F[B]]):F[Either[A,B]]", "kind" : "def"}, {"label" : "distribute", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "fpinscala.monads.Functor.distribute", "link" : "fpinscala\/applicative\/Monad.html#distribute[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Monad.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unit", "tail" : "(a: => A): F[A]", "member" : "fpinscala.applicative.Applicative.unit", "link" : "fpinscala\/applicative\/Monad.html#unit[A](a:=>A):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.applicative.StateUtil", "shortDescription" : "", "object" : "fpinscala\/applicative\/StateUtil$.html", "members_object" : [{"label" : "set", "tail" : "(s: S): State[S, Unit]", "member" : "fpinscala.applicative.StateUtil.set", "link" : "fpinscala\/applicative\/StateUtil$.html#set[S](s:S):fpinscala.state.State[S,Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(): State[S, S]", "member" : "fpinscala.applicative.StateUtil.get", "link" : "fpinscala\/applicative\/StateUtil$.html#get[S]:fpinscala.state.State[S,S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/StateUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/StateUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/StateUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/StateUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/StateUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/StateUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/StateUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/StateUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/StateUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/StateUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/StateUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/StateUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/StateUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/StateUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/StateUtil$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/StateUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/StateUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/StateUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/StateUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.applicative.Success", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.applicative.Success#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "fpinscala.applicative.Success.a", "link" : "fpinscala\/applicative\/Success.html#a:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/applicative\/Success.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Success.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Success.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Success.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Success.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Success.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Success.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Success.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Success.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Success.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Success.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Success.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Success.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Success.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Success.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Success.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Success.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/applicative\/Success.html", "kind" : "case class"}, {"name" : "fpinscala.applicative.Traverse", "object" : "fpinscala\/applicative\/Traverse$.html", "members_object" : [{"label" : "treeTraverse", "tail" : ": Nothing", "member" : "fpinscala.applicative.Traverse.treeTraverse", "link" : "fpinscala\/applicative\/Traverse$.html#treeTraverse:Nothing", "kind" : "val"}, {"label" : "optionTraverse", "tail" : ": Nothing", "member" : "fpinscala.applicative.Traverse.optionTraverse", "link" : "fpinscala\/applicative\/Traverse$.html#optionTraverse:Nothing", "kind" : "val"}, {"label" : "listTraverse", "tail" : ": Nothing", "member" : "fpinscala.applicative.Traverse.listTraverse", "link" : "fpinscala\/applicative\/Traverse$.html#listTraverse:Nothing", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Traverse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Traverse$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Traverse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Traverse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Traverse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Traverse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Traverse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Traverse$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Traverse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Traverse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Traverse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Traverse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Traverse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Traverse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Traverse$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Traverse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Traverse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Traverse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Traverse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/applicative\/Traverse.html", "kind" : "trait", "members_trait" : [{"label" : "compose", "tail" : "(G: Traverse[G]): Traverse[[x]F[G[x]]]", "member" : "fpinscala.applicative.Traverse.compose", "link" : "fpinscala\/applicative\/Traverse.html#compose[G[_]](implicitG:fpinscala.applicative.Traverse[G]):fpinscala.applicative.Traverse[[x]F[G[x]]]", "kind" : "def"}, {"label" : "fuse", "tail" : "(fa: F[A])(f: (A) => G[B], g: (A) => H[B])(G: Applicative[G], H: Applicative[H]): (G[F[B]], H[F[B]])", "member" : "fpinscala.applicative.Traverse.fuse", "link" : "fpinscala\/applicative\/Traverse.html#fuse[G[_],H[_],A,B](fa:F[A])(f:A=>G[B],g:A=>H[B])(implicitG:fpinscala.applicative.Applicative[G],implicitH:fpinscala.applicative.Applicative[H]):(G[F[B]],H[F[B]])", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(fa: F[A])(z: B)(f: (B, A) => B): B", "member" : "fpinscala.applicative.Traverse.foldLeft", "link" : "fpinscala\/applicative\/Traverse.html#foldLeft[A,B](fa:F[A])(z:B)(f:(B,A)=>B):B", "kind" : "def"}, {"label" : "reverse", "tail" : "(fa: F[A]): F[A]", "member" : "fpinscala.applicative.Traverse.reverse", "link" : "fpinscala\/applicative\/Traverse.html#reverse[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(fa: F[A]): F[(A, Int)]", "member" : "fpinscala.applicative.Traverse.zipWithIndex", "link" : "fpinscala\/applicative\/Traverse.html#zipWithIndex[A](fa:F[A]):F[(A,Int)]", "kind" : "def"}, {"label" : "toList", "tail" : "(fa: F[A]): List[A]", "member" : "fpinscala.applicative.Traverse.toList", "link" : "fpinscala\/applicative\/Traverse.html#toList[A](fa:F[A]):List[A]", "kind" : "def"}, {"label" : "mapAccum", "tail" : "(fa: F[A], s: S)(f: (A, S) => (B, S)): (F[B], S)", "member" : "fpinscala.applicative.Traverse.mapAccum", "link" : "fpinscala\/applicative\/Traverse.html#mapAccum[S,A,B](fa:F[A],s:S)(f:(A,S)=>(B,S)):(F[B],S)", "kind" : "def"}, {"label" : "traverseS", "tail" : "(fa: F[A])(f: (A) => State[S, B]): State[S, F[B]]", "member" : "fpinscala.applicative.Traverse.traverseS", "link" : "fpinscala\/applicative\/Traverse.html#traverseS[S,A,B](fa:F[A])(f:A=>fpinscala.state.State[S,B]):fpinscala.state.State[S,F[B]]", "kind" : "def"}, {"label" : "foldMap", "tail" : "(as: F[A])(f: (A) => B)(mb: Monoid[B]): B", "member" : "fpinscala.applicative.Traverse.foldMap", "link" : "fpinscala\/applicative\/Traverse.html#foldMap[A,B](as:F[A])(f:A=>B)(mb:fpinscala.monoids.Monoid[B]):B", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.applicative.Traverse.map", "link" : "fpinscala\/applicative\/Traverse.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "sequence", "tail" : "(fma: F[G[A]])(arg0: Applicative[G]): G[F[A]]", "member" : "fpinscala.applicative.Traverse.sequence", "link" : "fpinscala\/applicative\/Traverse.html#sequence[G[_],A](fma:F[G[A]])(implicitevidence$2:fpinscala.applicative.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(fa: F[A])(f: (A) => G[B])(arg0: Applicative[G]): G[F[B]]", "member" : "fpinscala.applicative.Traverse.traverse", "link" : "fpinscala\/applicative\/Traverse.html#traverse[G[_],A,B](fa:F[A])(f:A=>G[B])(implicitevidence$1:fpinscala.applicative.Applicative[G]):G[F[B]]", "kind" : "def"}, {"label" : "concatenate", "tail" : "(as: F[A])(m: Monoid[A]): A", "member" : "fpinscala.monoids.Foldable.concatenate", "link" : "fpinscala\/applicative\/Traverse.html#concatenate[A](as:F[A])(m:fpinscala.monoids.Monoid[A]):A", "kind" : "def"}, {"label" : "foldRight", "tail" : "(as: F[A])(z: B)(f: (A, B) => B): B", "member" : "fpinscala.monoids.Foldable.foldRight", "link" : "fpinscala\/applicative\/Traverse.html#foldRight[A,B](as:F[A])(z:B)(f:(A,B)=>B):B", "kind" : "def"}, {"label" : "codistribute", "tail" : "(e: Either[F[A], F[B]]): F[Either[A, B]]", "member" : "fpinscala.monads.Functor.codistribute", "link" : "fpinscala\/applicative\/Traverse.html#codistribute[A,B](e:Either[F[A],F[B]]):F[Either[A,B]]", "kind" : "def"}, {"label" : "distribute", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "fpinscala.monads.Functor.distribute", "link" : "fpinscala\/applicative\/Traverse.html#distribute[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Traverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Traverse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Traverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Traverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Traverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Traverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Traverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Traverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Traverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Traverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Traverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Traverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Traverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Traverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Traverse.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Traverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Traverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Traverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Traverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.applicative.Tree", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.applicative.Tree#<init>", "error" : "unsupported entity"}, {"label" : "tail", "tail" : ": List[Tree[A]]", "member" : "fpinscala.applicative.Tree.tail", "link" : "fpinscala\/applicative\/Tree.html#tail:List[fpinscala.applicative.Tree[A]]", "kind" : "val"}, {"label" : "head", "tail" : ": A", "member" : "fpinscala.applicative.Tree.head", "link" : "fpinscala\/applicative\/Tree.html#head:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/applicative\/Tree.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Tree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Tree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Tree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Tree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Tree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Tree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Tree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Tree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Tree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Tree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Tree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Tree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Tree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Tree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Tree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Tree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/applicative\/Tree.html", "kind" : "case class"}, {"name" : "fpinscala.applicative.Validation", "trait" : "fpinscala\/applicative\/Validation.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/applicative\/Validation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/applicative\/Validation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/applicative\/Validation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/applicative\/Validation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/applicative\/Validation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/applicative\/Validation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/applicative\/Validation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Validation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Validation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/applicative\/Validation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/applicative\/Validation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/applicative\/Validation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/applicative\/Validation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/applicative\/Validation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/applicative\/Validation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/applicative\/Validation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/applicative\/Validation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/applicative\/Validation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/applicative\/Validation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "fpinscala.parallelism" : [{"name" : "fpinscala.parallelism.Actor", "shortDescription" : "Processes messages of type A, one at a time.", "object" : "fpinscala\/parallelism\/Actor$.html", "members_class" : [{"label" : "contramap", "tail" : "(f: (B) => A): Actor[B]", "member" : "fpinscala.parallelism.Actor.contramap", "link" : "fpinscala\/parallelism\/Actor.html#contramap[B](f:B=>A):fpinscala.parallelism.Actor[B]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A): Unit", "member" : "fpinscala.parallelism.Actor.apply", "link" : "fpinscala\/parallelism\/Actor.html#apply(a:A):Unit", "kind" : "def"}, {"label" : "!", "tail" : "(a: A): Unit", "member" : "fpinscala.parallelism.Actor.!", "link" : "fpinscala\/parallelism\/Actor.html#!(a:A):Unit", "kind" : "def"}, {"member" : "fpinscala.parallelism.Actor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Actor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Actor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Actor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Actor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Actor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Actor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Actor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Actor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Actor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Actor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Actor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Actor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Actor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Actor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Actor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Actor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Actor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Actor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Actor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(es: ExecutorService)(handler: (A) => Unit, onError: (Throwable) => Unit): Actor[A]", "member" : "fpinscala.parallelism.Actor.apply", "link" : "fpinscala\/parallelism\/Actor$.html#apply[A](es:java.util.concurrent.ExecutorService)(handler:A=>Unit,onError:Throwable=>Unit):fpinscala.parallelism.Actor[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Actor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Actor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Actor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Actor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Actor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Actor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Actor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Actor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Actor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Actor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Actor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Actor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Actor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Actor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Actor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Actor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Actor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Actor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Actor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "fpinscala\/parallelism\/Actor.html", "kind" : "class"}, {"name" : "fpinscala.parallelism.Examples", "shortDescription" : "", "object" : "fpinscala\/parallelism\/Examples$.html", "members_object" : [{"label" : "sum", "tail" : "(ints: IndexedSeq[Int]): Int", "member" : "fpinscala.parallelism.Examples.sum", "link" : "fpinscala\/parallelism\/Examples$.html#sum(ints:IndexedSeq[Int]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Examples$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Examples$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Examples$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Examples$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Examples$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Examples$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Examples$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Examples$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Examples$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Examples$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Examples$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Examples$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Examples$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Examples$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Examples$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Examples$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Examples$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Examples$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Examples$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.parallelism.Nonblocking", "shortDescription" : "", "object" : "fpinscala\/parallelism\/Nonblocking$.html", "members_object" : [{"label" : "Par", "tail" : "", "member" : "fpinscala.parallelism.Nonblocking.Par", "link" : "fpinscala\/parallelism\/Nonblocking$.html#Par", "kind" : "object"}, {"label" : "Par", "tail" : "", "member" : "fpinscala.parallelism.Nonblocking.Par", "link" : "fpinscala\/parallelism\/Nonblocking$.html#Par[+A]=java.util.concurrent.ExecutorService=>fpinscala.parallelism.Nonblocking.Future[A]", "kind" : "type"}, {"label" : "Future", "tail" : "", "member" : "fpinscala.parallelism.Nonblocking.Future", "link" : "fpinscala\/parallelism\/Nonblocking$.html#Future[+A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Nonblocking$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Nonblocking$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Nonblocking$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Nonblocking$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Nonblocking$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Nonblocking$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Nonblocking$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Nonblocking$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Nonblocking$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Nonblocking$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Nonblocking$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Nonblocking$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Nonblocking$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Nonblocking$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Nonblocking$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Nonblocking$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Nonblocking$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Nonblocking$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Nonblocking$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.parallelism.Par", "shortDescription" : "", "object" : "fpinscala\/parallelism\/Par$.html", "members_object" : [{"label" : "ParOps", "tail" : "", "member" : "fpinscala.parallelism.Par.ParOps", "link" : "fpinscala\/parallelism\/Par$.html#ParOps[A]extendsAnyRef", "kind" : "class"}, {"label" : "toParOps", "tail" : "(p: Par[A]): ParOps[A]", "member" : "fpinscala.parallelism.Par.toParOps", "link" : "fpinscala\/parallelism\/Par$.html#toParOps[A](p:fpinscala.parallelism.Par.Par[A]):fpinscala.parallelism.Par.ParOps[A]", "kind" : "implicit def"}, {"label" : "choice", "tail" : "(cond: Par[Boolean])(t: Par[A], f: Par[A]): Par[A]", "member" : "fpinscala.parallelism.Par.choice", "link" : "fpinscala\/parallelism\/Par$.html#choice[A](cond:fpinscala.parallelism.Par.Par[Boolean])(t:fpinscala.parallelism.Par.Par[A],f:fpinscala.parallelism.Par.Par[A]):fpinscala.parallelism.Par.Par[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(fa: => Par[A]): Par[A]", "member" : "fpinscala.parallelism.Par.delay", "link" : "fpinscala\/parallelism\/Par$.html#delay[A](fa:=>fpinscala.parallelism.Par.Par[A]):fpinscala.parallelism.Par.Par[A]", "kind" : "def"}, {"label" : "equal", "tail" : "(e: ExecutorService)(p: Par[A], p2: Par[A]): Boolean", "member" : "fpinscala.parallelism.Par.equal", "link" : "fpinscala\/parallelism\/Par$.html#equal[A](e:java.util.concurrent.ExecutorService)(p:fpinscala.parallelism.Par.Par[A],p2:fpinscala.parallelism.Par.Par[A]):Boolean", "kind" : "def"}, {"label" : "sortPar", "tail" : "(parList: Par[List[Int]]): Par[List[Int]]", "member" : "fpinscala.parallelism.Par.sortPar", "link" : "fpinscala\/parallelism\/Par$.html#sortPar(parList:fpinscala.parallelism.Par.Par[List[Int]]):fpinscala.parallelism.Par.Par[List[Int]]", "kind" : "def"}, {"label" : "map", "tail" : "(pa: Par[A])(f: (A) => B): Par[B]", "member" : "fpinscala.parallelism.Par.map", "link" : "fpinscala\/parallelism\/Par$.html#map[A,B](pa:fpinscala.parallelism.Par.Par[A])(f:A=>B):fpinscala.parallelism.Par.Par[B]", "kind" : "def"}, {"label" : "fork", "tail" : "(a: => Par[A]): Par[A]", "member" : "fpinscala.parallelism.Par.fork", "link" : "fpinscala\/parallelism\/Par$.html#fork[A](a:=>fpinscala.parallelism.Par.Par[A]):fpinscala.parallelism.Par.Par[A]", "kind" : "def"}, {"label" : "map2", "tail" : "(a: Par[A], b: Par[B])(f: (A, B) => C): Par[C]", "member" : "fpinscala.parallelism.Par.map2", "link" : "fpinscala\/parallelism\/Par$.html#map2[A,B,C](a:fpinscala.parallelism.Par.Par[A],b:fpinscala.parallelism.Par.Par[B])(f:(A,B)=>C):fpinscala.parallelism.Par.Par[C]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: A): Par[A]", "member" : "fpinscala.parallelism.Par.unit", "link" : "fpinscala\/parallelism\/Par$.html#unit[A](a:A):fpinscala.parallelism.Par.Par[A]", "kind" : "def"}, {"label" : "run", "tail" : "(s: ExecutorService)(a: Par[A]): Future[A]", "member" : "fpinscala.parallelism.Par.run", "link" : "fpinscala\/parallelism\/Par$.html#run[A](s:java.util.concurrent.ExecutorService)(a:fpinscala.parallelism.Par.Par[A]):java.util.concurrent.Future[A]", "kind" : "def"}, {"label" : "Par", "tail" : "", "member" : "fpinscala.parallelism.Par.Par", "link" : "fpinscala\/parallelism\/Par$.html#Par[A]=java.util.concurrent.ExecutorService=>java.util.concurrent.Future[A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Par$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Par$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Par$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Par$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Par$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Par$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Par$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Par$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Par$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Par$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Par$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Par$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Par$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Par$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Par$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Par$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Par$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Par$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Par$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.parallelism.Strategy", "object" : "fpinscala\/parallelism\/Strategy$.html", "members_object" : [{"label" : "sequential", "tail" : "(): Strategy", "member" : "fpinscala.parallelism.Strategy.sequential", "link" : "fpinscala\/parallelism\/Strategy$.html#sequential:fpinscala.parallelism.Strategy", "kind" : "def"}, {"label" : "fromExecutorService", "tail" : "(es: ExecutorService): Strategy", "member" : "fpinscala.parallelism.Strategy.fromExecutorService", "link" : "fpinscala\/parallelism\/Strategy$.html#fromExecutorService(es:java.util.concurrent.ExecutorService):fpinscala.parallelism.Strategy", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Strategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Strategy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Strategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Strategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Strategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Strategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Strategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Strategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Strategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Strategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Strategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Strategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Strategy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Strategy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Strategy$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Strategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Strategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Strategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Strategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/parallelism\/Strategy.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parallelism\/Strategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parallelism\/Strategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parallelism\/Strategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parallelism\/Strategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parallelism\/Strategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parallelism\/Strategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parallelism\/Strategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Strategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Strategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parallelism\/Strategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parallelism\/Strategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parallelism\/Strategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parallelism\/Strategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parallelism\/Strategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parallelism\/Strategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parallelism\/Strategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parallelism\/Strategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parallelism\/Strategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parallelism\/Strategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: => A): () => A", "member" : "fpinscala.parallelism.Strategy.apply", "link" : "fpinscala\/parallelism\/Strategy.html#apply[A](a:=>A):()=>A", "kind" : "abstract def"}], "shortDescription" : "Provides a function for evaluating expressions, possibly asynchronously."}], "fpinscala.parsing" : [{"name" : "fpinscala.parsing.Location", "shortDescription" : "", "members_case class" : [{"label" : "currentLine", "tail" : "(): String", "member" : "fpinscala.parsing.Location.currentLine", "link" : "fpinscala\/parsing\/Location.html#currentLine:String", "kind" : "def"}, {"label" : "advanceBy", "tail" : "(n: Int): Location", "member" : "fpinscala.parsing.Location.advanceBy", "link" : "fpinscala\/parsing\/Location.html#advanceBy(n:Int):fpinscala.parsing.Location", "kind" : "def"}, {"label" : "toError", "tail" : "(msg: String): ParseError", "member" : "fpinscala.parsing.Location.toError", "link" : "fpinscala\/parsing\/Location.html#toError(msg:String):fpinscala.parsing.ParseError", "kind" : "def"}, {"label" : "col", "tail" : ": Int", "member" : "fpinscala.parsing.Location.col", "link" : "fpinscala\/parsing\/Location.html#col:Int", "kind" : "lazy val"}, {"label" : "line", "tail" : ": Int", "member" : "fpinscala.parsing.Location.line", "link" : "fpinscala\/parsing\/Location.html#line:Int", "kind" : "lazy val"}, {"member" : "fpinscala.parsing.Location#<init>", "error" : "unsupported entity"}, {"label" : "offset", "tail" : ": Int", "member" : "fpinscala.parsing.Location.offset", "link" : "fpinscala\/parsing\/Location.html#offset:Int", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "fpinscala.parsing.Location.input", "link" : "fpinscala\/parsing\/Location.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/parsing\/Location.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parsing\/Location.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parsing\/Location.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parsing\/Location.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parsing\/Location.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parsing\/Location.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parsing\/Location.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parsing\/Location.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/Location.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/Location.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/Location.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parsing\/Location.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parsing\/Location.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parsing\/Location.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parsing\/Location.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parsing\/Location.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parsing\/Location.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/parsing\/Location.html", "kind" : "case class"}, {"name" : "fpinscala.parsing.ParseError", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.parsing.ParseError#<init>", "error" : "unsupported entity"}, {"label" : "otherFailures", "tail" : ": List[ParseError]", "member" : "fpinscala.parsing.ParseError.otherFailures", "link" : "fpinscala\/parsing\/ParseError.html#otherFailures:List[fpinscala.parsing.ParseError]", "kind" : "val"}, {"label" : "stack", "tail" : ": List[(Location, String)]", "member" : "fpinscala.parsing.ParseError.stack", "link" : "fpinscala\/parsing\/ParseError.html#stack:List[(fpinscala.parsing.Location,String)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/parsing\/ParseError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parsing\/ParseError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parsing\/ParseError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parsing\/ParseError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parsing\/ParseError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parsing\/ParseError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parsing\/ParseError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parsing\/ParseError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/ParseError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/ParseError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/ParseError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parsing\/ParseError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parsing\/ParseError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parsing\/ParseError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parsing\/ParseError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parsing\/ParseError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parsing\/ParseError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/parsing\/ParseError.html", "kind" : "case class"}, {"name" : "fpinscala.parsing.Parsers", "trait" : "fpinscala\/parsing\/Parsers.html", "kind" : "trait", "members_trait" : [{"label" : "Laws", "tail" : "", "member" : "fpinscala.parsing.Parsers.Laws", "link" : "fpinscala\/parsing\/Parsers.html#Laws", "kind" : "object"}, {"label" : "ParserOps", "tail" : "", "member" : "fpinscala.parsing.Parsers.ParserOps", "link" : "fpinscala\/parsing\/Parsers.html#ParserOps[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/parsing\/Parsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/parsing\/Parsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/parsing\/Parsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/parsing\/Parsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/parsing\/Parsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/parsing\/Parsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/parsing\/Parsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/Parsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/Parsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/parsing\/Parsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/parsing\/Parsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/parsing\/Parsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/parsing\/Parsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/parsing\/Parsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/parsing\/Parsers.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/parsing\/Parsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/parsing\/Parsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/parsing\/Parsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/parsing\/Parsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "fpinscala.localeffects" : [{"name" : "fpinscala.localeffects.Immutable", "shortDescription" : "", "object" : "fpinscala\/localeffects\/Immutable$.html", "members_object" : [{"label" : "quicksort", "tail" : "(xs: List[Int]): List[Int]", "member" : "fpinscala.localeffects.Immutable.quicksort", "link" : "fpinscala\/localeffects\/Immutable$.html#quicksort(xs:List[Int]):List[Int]", "kind" : "def"}, {"label" : "qs", "tail" : "(a: STArray[S, Int], l: Int, r: Int): ST[S, Unit]", "member" : "fpinscala.localeffects.Immutable.qs", "link" : "fpinscala\/localeffects\/Immutable$.html#qs[S](a:fpinscala.localeffects.STArray[S,Int],l:Int,r:Int):fpinscala.localeffects.ST[S,Unit]", "kind" : "def"}, {"label" : "partition", "tail" : "(a: STArray[S, Int], l: Int, r: Int, pivot: Int): ST[S, Int]", "member" : "fpinscala.localeffects.Immutable.partition", "link" : "fpinscala\/localeffects\/Immutable$.html#partition[S](a:fpinscala.localeffects.STArray[S,Int],l:Int,r:Int,pivot:Int):fpinscala.localeffects.ST[S,Int]", "kind" : "def"}, {"label" : "noop", "tail" : "(): ST[S, Unit]", "member" : "fpinscala.localeffects.Immutable.noop", "link" : "fpinscala\/localeffects\/Immutable$.html#noop[S]:fpinscala.localeffects.ST[S,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/Immutable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/Immutable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/Immutable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/Immutable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/Immutable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/Immutable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/Immutable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/Immutable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/Immutable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/Immutable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/Immutable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/Immutable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/Immutable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/Immutable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/Immutable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/Immutable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/Immutable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/Immutable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/Immutable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.localeffects.Mutable", "shortDescription" : "", "object" : "fpinscala\/localeffects\/Mutable$.html", "members_object" : [{"label" : "quicksort", "tail" : "(xs: List[Int]): List[Int]", "member" : "fpinscala.localeffects.Mutable.quicksort", "link" : "fpinscala\/localeffects\/Mutable$.html#quicksort(xs:List[Int]):List[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/Mutable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/Mutable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/Mutable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/Mutable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/Mutable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/Mutable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/Mutable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/Mutable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/Mutable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/Mutable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/Mutable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/Mutable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/Mutable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/Mutable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/Mutable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/Mutable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/Mutable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/Mutable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/Mutable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.localeffects.RunnableST", "trait" : "fpinscala\/localeffects\/RunnableST.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/RunnableST.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/RunnableST.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/RunnableST.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/RunnableST.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/RunnableST.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/RunnableST.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/RunnableST.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/RunnableST.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/RunnableST.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/RunnableST.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/RunnableST.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/RunnableST.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/RunnableST.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/RunnableST.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/RunnableST.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/RunnableST.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/RunnableST.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/RunnableST.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/RunnableST.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(): ST[S, A]", "member" : "fpinscala.localeffects.RunnableST.apply", "link" : "fpinscala\/localeffects\/RunnableST.html#apply[S]:fpinscala.localeffects.ST[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.localeffects.ST", "object" : "fpinscala\/localeffects\/ST$.html", "members_object" : [{"label" : "runST", "tail" : "(st: RunnableST[A]): A", "member" : "fpinscala.localeffects.ST.runST", "link" : "fpinscala\/localeffects\/ST$.html#runST[A](st:fpinscala.localeffects.RunnableST[A]):A", "kind" : "def"}, {"label" : "apply", "tail" : "(a: => A): ST[S, A]", "member" : "fpinscala.localeffects.ST.apply", "link" : "fpinscala\/localeffects\/ST$.html#apply[S,A](a:=>A):fpinscala.localeffects.ST[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/ST$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/ST$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/ST$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/ST$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/ST$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/ST$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/ST$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/ST$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/ST$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/ST$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/ST$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/ST$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/ST$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/ST$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/ST$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/ST$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/ST$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/ST$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/ST$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/localeffects\/ST.html", "kind" : "trait", "members_trait" : [{"label" : "flatMap", "tail" : "(f: (A) => ST[S, B]): ST[S, B]", "member" : "fpinscala.localeffects.ST.flatMap", "link" : "fpinscala\/localeffects\/ST.html#flatMap[B](f:A=>fpinscala.localeffects.ST[S,B]):fpinscala.localeffects.ST[S,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): ST[S, B]", "member" : "fpinscala.localeffects.ST.map", "link" : "fpinscala\/localeffects\/ST.html#map[B](f:A=>B):fpinscala.localeffects.ST[S,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/ST.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/ST.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/ST.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/ST.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/ST.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/ST.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/ST.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/ST.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/ST.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/ST.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/ST.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/ST.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/ST.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/ST.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/ST.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/ST.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/ST.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/ST.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/ST.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(s: S): (A, S)", "member" : "fpinscala.localeffects.ST.run", "link" : "fpinscala\/localeffects\/ST.html#run(s:S):(A,S)", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.localeffects.STArray", "shortDescription" : "", "object" : "fpinscala\/localeffects\/STArray$.html", "members_class" : [{"label" : "swap", "tail" : "(i: Int, j: Int): ST[S, Unit]", "member" : "fpinscala.localeffects.STArray.swap", "link" : "fpinscala\/localeffects\/STArray.html#swap(i:Int,j:Int):fpinscala.localeffects.ST[S,Unit]", "kind" : "def"}, {"label" : "fill", "tail" : "(xs: Map[Int, A]): ST[S, Unit]", "member" : "fpinscala.localeffects.STArray.fill", "link" : "fpinscala\/localeffects\/STArray.html#fill(xs:Map[Int,A]):fpinscala.localeffects.ST[S,Unit]", "kind" : "def"}, {"label" : "freeze", "tail" : "(): ST[S, List[A]]", "member" : "fpinscala.localeffects.STArray.freeze", "link" : "fpinscala\/localeffects\/STArray.html#freeze:fpinscala.localeffects.ST[S,List[A]]", "kind" : "def"}, {"label" : "read", "tail" : "(i: Int): ST[S, A]", "member" : "fpinscala.localeffects.STArray.read", "link" : "fpinscala\/localeffects\/STArray.html#read(i:Int):fpinscala.localeffects.ST[S,A]", "kind" : "def"}, {"label" : "write", "tail" : "(i: Int, a: A): ST[S, Unit]", "member" : "fpinscala.localeffects.STArray.write", "link" : "fpinscala\/localeffects\/STArray.html#write(i:Int,a:A):fpinscala.localeffects.ST[S,Unit]", "kind" : "def"}, {"label" : "size", "tail" : "(): ST[S, Int]", "member" : "fpinscala.localeffects.STArray.size", "link" : "fpinscala\/localeffects\/STArray.html#size:fpinscala.localeffects.ST[S,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/STArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/STArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/STArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/STArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/STArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/STArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/STArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/STArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/STArray.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/STArray.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/STArray.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/STArray.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/STArray.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/STArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/STArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/STArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(): Array[A]", "member" : "fpinscala.localeffects.STArray.value", "link" : "fpinscala\/localeffects\/STArray.html#value:Array[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "fromList", "tail" : "(xs: List[A])(arg0: Manifest[A]): ST[S, STArray[S, A]]", "member" : "fpinscala.localeffects.STArray.fromList", "link" : "fpinscala\/localeffects\/STArray$.html#fromList[S,A](xs:List[A])(implicitevidence$2:Manifest[A]):fpinscala.localeffects.ST[S,fpinscala.localeffects.STArray[S,A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(sz: Int, v: A)(arg0: Manifest[A]): ST[S, STArray[S, A]]", "member" : "fpinscala.localeffects.STArray.apply", "link" : "fpinscala\/localeffects\/STArray$.html#apply[S,A](sz:Int,v:A)(implicitevidence$1:Manifest[A]):fpinscala.localeffects.ST[S,fpinscala.localeffects.STArray[S,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/STArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/STArray$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/STArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/STArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/STArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/STArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/STArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/STArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/STArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/STArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/STArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/STArray$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/STArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/STArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/STArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/STArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "fpinscala\/localeffects\/STArray.html", "kind" : "class"}, {"name" : "fpinscala.localeffects.STRef", "object" : "fpinscala\/localeffects\/STRef$.html", "members_object" : [{"label" : "apply", "tail" : "(a: A): ST[S, STRef[S, A]]", "member" : "fpinscala.localeffects.STRef.apply", "link" : "fpinscala\/localeffects\/STRef$.html#apply[S,A](a:A):fpinscala.localeffects.ST[S,fpinscala.localeffects.STRef[S,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/STRef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/STRef$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/STRef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/STRef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/STRef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/STRef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/STRef$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STRef$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STRef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STRef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/STRef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/STRef$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/STRef$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/STRef$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/STRef$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/STRef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/STRef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/STRef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/STRef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/localeffects\/STRef.html", "kind" : "trait", "members_trait" : [{"label" : "write", "tail" : "(a: => A): ST[S, Unit]", "member" : "fpinscala.localeffects.STRef.write", "link" : "fpinscala\/localeffects\/STRef.html#write(a:=>A):fpinscala.localeffects.ST[S,Unit]", "kind" : "def"}, {"label" : "read", "tail" : "(): ST[S, A]", "member" : "fpinscala.localeffects.STRef.read", "link" : "fpinscala\/localeffects\/STRef.html#read:fpinscala.localeffects.ST[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/localeffects\/STRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/localeffects\/STRef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/localeffects\/STRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/localeffects\/STRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/localeffects\/STRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/localeffects\/STRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/localeffects\/STRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STRef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/localeffects\/STRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/localeffects\/STRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/localeffects\/STRef.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/localeffects\/STRef.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/localeffects\/STRef.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/localeffects\/STRef.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/localeffects\/STRef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/localeffects\/STRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/localeffects\/STRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/localeffects\/STRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cell", "tail" : ": A", "member" : "fpinscala.localeffects.STRef.cell", "link" : "fpinscala\/localeffects\/STRef.html#cell:A", "kind" : "abstract val"}], "shortDescription" : ""}], "fpinscala.monads" : [{"name" : "fpinscala.monads.Functor", "object" : "fpinscala\/monads\/Functor$.html", "members_object" : [{"label" : "listFunctor", "tail" : ": Functor[List]", "member" : "fpinscala.monads.Functor.listFunctor", "link" : "fpinscala\/monads\/Functor$.html#listFunctor:fpinscala.monads.Functor[List]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Functor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Functor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Functor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Functor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Functor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Functor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Functor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Functor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Functor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Functor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Functor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Functor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monads\/Functor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Functor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monads\/Functor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monads\/Functor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Functor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Functor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Functor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/monads\/Functor.html", "kind" : "trait", "members_trait" : [{"label" : "codistribute", "tail" : "(e: Either[F[A], F[B]]): F[Either[A, B]]", "member" : "fpinscala.monads.Functor.codistribute", "link" : "fpinscala\/monads\/Functor.html#codistribute[A,B](e:Either[F[A],F[B]]):F[Either[A,B]]", "kind" : "def"}, {"label" : "distribute", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "fpinscala.monads.Functor.distribute", "link" : "fpinscala\/monads\/Functor.html#distribute[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Functor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Functor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Functor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Functor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Functor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Functor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Functor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Functor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Functor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Functor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Functor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Functor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monads\/Functor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Functor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monads\/Functor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monads\/Functor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Functor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Functor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Functor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.monads.Functor.map", "link" : "fpinscala\/monads\/Functor.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.monads.Id", "shortDescription" : "", "members_case class" : [{"label" : "flatMap", "tail" : "(f: (A) => Id[B]): Id[B]", "member" : "fpinscala.monads.Id.flatMap", "link" : "fpinscala\/monads\/Id.html#flatMap[B](f:A=>fpinscala.monads.Id[B]):fpinscala.monads.Id[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Id[B]", "member" : "fpinscala.monads.Id.map", "link" : "fpinscala\/monads\/Id.html#map[B](f:A=>B):fpinscala.monads.Id[B]", "kind" : "def"}, {"member" : "fpinscala.monads.Id#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "fpinscala.monads.Id.value", "link" : "fpinscala\/monads\/Id.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/monads\/Id.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Id.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Id.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Id.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Id.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Id.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Id.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Id.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Id.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Id.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Id.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Id.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Id.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Id.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Id.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Id.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Id.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/monads\/Id.html", "kind" : "case class"}, {"name" : "fpinscala.monads.Monad", "object" : "fpinscala\/monads\/Monad$.html", "members_object" : [{"label" : "readerMonad", "tail" : "(): Nothing", "member" : "fpinscala.monads.Monad.readerMonad", "link" : "fpinscala\/monads\/Monad$.html#readerMonad[R]:Nothing", "kind" : "def"}, {"label" : "idMonad", "tail" : ": Monad[Id]", "member" : "fpinscala.monads.Monad.idMonad", "link" : "fpinscala\/monads\/Monad$.html#idMonad:fpinscala.monads.Monad[fpinscala.monads.Id]", "kind" : "val"}, {"label" : "stateMonad", "tail" : "(): Nothing", "member" : "fpinscala.monads.Monad.stateMonad", "link" : "fpinscala\/monads\/Monad$.html#stateMonad[S]:Nothing", "kind" : "def"}, {"label" : "listMonad", "tail" : ": Monad[List]", "member" : "fpinscala.monads.Monad.listMonad", "link" : "fpinscala\/monads\/Monad$.html#listMonad:fpinscala.monads.Monad[List]", "kind" : "val"}, {"label" : "streamMonad", "tail" : ": Monad[Stream]", "member" : "fpinscala.monads.Monad.streamMonad", "link" : "fpinscala\/monads\/Monad$.html#streamMonad:fpinscala.monads.Monad[Stream]", "kind" : "val"}, {"label" : "optionMonad", "tail" : ": Monad[Option]", "member" : "fpinscala.monads.Monad.optionMonad", "link" : "fpinscala\/monads\/Monad$.html#optionMonad:fpinscala.monads.Monad[Option]", "kind" : "val"}, {"label" : "parserMonad", "tail" : "(p: Parsers[P]): Monad[P]", "member" : "fpinscala.monads.Monad.parserMonad", "link" : "fpinscala\/monads\/Monad$.html#parserMonad[P[+_]](p:fpinscala.parsing.Parsers[P]):fpinscala.monads.Monad[P]", "kind" : "def"}, {"label" : "parMonad", "tail" : ": Monad[Par]", "member" : "fpinscala.monads.Monad.parMonad", "link" : "fpinscala\/monads\/Monad$.html#parMonad:fpinscala.monads.Monad[fpinscala.parallelism.Par.Par]", "kind" : "val"}, {"label" : "genMonad", "tail" : ": Monad[Gen]", "member" : "fpinscala.monads.Monad.genMonad", "link" : "fpinscala\/monads\/Monad$.html#genMonad:fpinscala.monads.Monad[fpinscala.testing.Gen]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Monad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Monad$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Monad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Monad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Monad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Monad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Monad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Monad$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Monad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Monad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Monad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Monad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monads\/Monad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Monad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monads\/Monad$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monads\/Monad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Monad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Monad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Monad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/monads\/Monad.html", "kind" : "trait", "members_trait" : [{"label" : "__flatMap", "tail" : "(ma: M[A])(f: (A) => M[B]): M[B]", "member" : "fpinscala.monads.Monad.__flatMap", "link" : "fpinscala\/monads\/Monad.html#__flatMap[A,B](ma:M[A])(f:A=>M[B]):M[B]", "kind" : "def"}, {"label" : "join", "tail" : "(mma: M[M[A]]): M[A]", "member" : "fpinscala.monads.Monad.join", "link" : "fpinscala\/monads\/Monad.html#join[A](mma:M[M[A]]):M[A]", "kind" : "def"}, {"label" : "_flatMap", "tail" : "(ma: M[A])(f: (A) => M[B]): M[B]", "member" : "fpinscala.monads.Monad._flatMap", "link" : "fpinscala\/monads\/Monad.html#_flatMap[A,B](ma:M[A])(f:A=>M[B]):M[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(f: (A) => M[B], g: (B) => M[C]): (A) => M[C]", "member" : "fpinscala.monads.Monad.compose", "link" : "fpinscala\/monads\/Monad.html#compose[A,B,C](f:A=>M[B],g:B=>M[C]):A=>M[C]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int, ma: M[A]): M[List[A]]", "member" : "fpinscala.monads.Monad.replicateM", "link" : "fpinscala\/monads\/Monad.html#replicateM[A](n:Int,ma:M[A]):M[List[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(la: List[A])(f: (A) => M[B]): M[List[B]]", "member" : "fpinscala.monads.Monad.traverse", "link" : "fpinscala\/monads\/Monad.html#traverse[A,B](la:List[A])(f:A=>M[B]):M[List[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(lma: List[M[A]]): M[List[A]]", "member" : "fpinscala.monads.Monad.sequence", "link" : "fpinscala\/monads\/Monad.html#sequence[A](lma:List[M[A]]):M[List[A]]", "kind" : "def"}, {"label" : "map2", "tail" : "(ma: M[A], mb: M[B])(f: (A, B) => C): M[C]", "member" : "fpinscala.monads.Monad.map2", "link" : "fpinscala\/monads\/Monad.html#map2[A,B,C](ma:M[A],mb:M[B])(f:(A,B)=>C):M[C]", "kind" : "def"}, {"label" : "map", "tail" : "(ma: M[A])(f: (A) => B): M[B]", "member" : "fpinscala.monads.Monad.map", "link" : "fpinscala\/monads\/Monad.html#map[A,B](ma:M[A])(f:A=>B):M[B]", "kind" : "def"}, {"label" : "codistribute", "tail" : "(e: Either[M[A], M[B]]): M[Either[A, B]]", "member" : "fpinscala.monads.Functor.codistribute", "link" : "fpinscala\/monads\/Monad.html#codistribute[A,B](e:Either[F[A],F[B]]):F[Either[A,B]]", "kind" : "def"}, {"label" : "distribute", "tail" : "(fab: M[(A, B)]): (M[A], M[B])", "member" : "fpinscala.monads.Functor.distribute", "link" : "fpinscala\/monads\/Monad.html#distribute[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monads\/Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monads\/Monad.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monads\/Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(ma: M[A])(f: (A) => M[B]): M[B]", "member" : "fpinscala.monads.Monad.flatMap", "link" : "fpinscala\/monads\/Monad.html#flatMap[A,B](ma:M[A])(f:A=>M[B]):M[B]", "kind" : "abstract def"}, {"label" : "unit", "tail" : "(a: => A): M[A]", "member" : "fpinscala.monads.Monad.unit", "link" : "fpinscala\/monads\/Monad.html#unit[A](a:=>A):M[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.monads.Reader", "shortDescription" : "", "object" : "fpinscala\/monads\/Reader$.html", "members_object" : [{"label" : "readerMonad", "tail" : "(): Monad[[x]Reader[R, x]]", "member" : "fpinscala.monads.Reader.readerMonad", "link" : "fpinscala\/monads\/Reader$.html#readerMonad[R]:fpinscala.monads.Monad[[x]fpinscala.monads.Reader[R,x]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Reader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/monads\/Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/monads\/Reader$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/monads\/Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "fpinscala.monads.Reader#<init>", "error" : "unsupported entity"}, {"label" : "run", "tail" : ": (R) => A", "member" : "fpinscala.monads.Reader.run", "link" : "fpinscala\/monads\/Reader.html#run:R=>A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/monads\/Reader.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/monads\/Reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/monads\/Reader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/monads\/Reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/monads\/Reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/monads\/Reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/monads\/Reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/monads\/Reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Reader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/monads\/Reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/monads\/Reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/monads\/Reader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/monads\/Reader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/monads\/Reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/monads\/Reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/monads\/Reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/monads\/Reader.html", "kind" : "case class"}], "fpinscala.iomonad" : [{"name" : "fpinscala.iomonad.Functor", "trait" : "fpinscala\/iomonad\/Functor.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/Functor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/Functor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/Functor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/Functor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/Functor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/Functor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/Functor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Functor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Functor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Functor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/Functor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/Functor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/Functor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/Functor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/Functor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/Functor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/Functor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/Functor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/Functor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(a: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.iomonad.Functor.map", "link" : "fpinscala\/iomonad\/Functor.html#map[A,B](a:F[A])(f:A=>B):F[B]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.iomonad.IO0", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO0$.html", "members_object" : [{"label" : "converter", "tail" : "(): Unit", "member" : "fpinscala.iomonad.IO0.converter", "link" : "fpinscala\/iomonad\/IO0$.html#converter:Unit", "kind" : "def"}, {"label" : "fahrenheitToCelsius", "tail" : "(f: Double): Double", "member" : "fpinscala.iomonad.IO0.fahrenheitToCelsius", "link" : "fpinscala\/iomonad\/IO0$.html#fahrenheitToCelsius(f:Double):Double", "kind" : "def"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO0.IO", "link" : "fpinscala\/iomonad\/IO0$.html#IO", "kind" : "object"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO0.IO", "link" : "fpinscala\/iomonad\/IO0$.html#IOextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO0$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO0$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO0$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO0$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO0$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO0$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO0$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO0$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO0$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO0$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO0$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO0$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO0$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO0$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO0$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO0$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO0$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO0$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO0$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO1", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO1$.html", "members_object" : [{"label" : "factorialREPL", "tail" : ": IO[Unit]", "member" : "fpinscala.iomonad.IO1.factorialREPL", "link" : "fpinscala\/iomonad\/IO1$.html#factorialREPL:fpinscala.iomonad.IO1.IO[Unit]", "kind" : "val"}, {"label" : "factorial", "tail" : "(n: Int): IO[Int]", "member" : "fpinscala.iomonad.IO1.factorial", "link" : "fpinscala\/iomonad\/IO1$.html#factorial(n:Int):fpinscala.iomonad.IO1.IO[Int]", "kind" : "def"}, {"label" : "helpstring", "tail" : ": String", "member" : "fpinscala.iomonad.IO1.helpstring", "link" : "fpinscala\/iomonad\/IO1$.html#helpstring:String", "kind" : "val"}, {"label" : "lines", "tail" : ": IO[List[String]]", "member" : "fpinscala.iomonad.IO1.lines", "link" : "fpinscala\/iomonad\/IO1$.html#lines:fpinscala.iomonad.IO1.IO[List[String]]", "kind" : "val"}, {"label" : "prompts", "tail" : ": IO[Unit]", "member" : "fpinscala.iomonad.IO1.prompts", "link" : "fpinscala\/iomonad\/IO1$.html#prompts:fpinscala.iomonad.IO1.IO[Unit]", "kind" : "val"}, {"label" : "readInts", "tail" : ": IO[(Int, Int)]", "member" : "fpinscala.iomonad.IO1.readInts", "link" : "fpinscala\/iomonad\/IO1$.html#readInts:fpinscala.iomonad.IO1.IO[(Int,Int)]", "kind" : "val"}, {"label" : "readInt", "tail" : ": IO[Int]", "member" : "fpinscala.iomonad.IO1.readInt", "link" : "fpinscala\/iomonad\/IO1$.html#readInt:fpinscala.iomonad.IO1.IO[Int]", "kind" : "val"}, {"label" : "echo", "tail" : ": IO[Unit]", "member" : "fpinscala.iomonad.IO1.echo", "link" : "fpinscala\/iomonad\/IO1$.html#echo:fpinscala.iomonad.IO1.IO[Unit]", "kind" : "val"}, {"label" : "converter", "tail" : "(): IO[Unit]", "member" : "fpinscala.iomonad.IO1.converter", "link" : "fpinscala\/iomonad\/IO1$.html#converter:fpinscala.iomonad.IO1.IO[Unit]", "kind" : "def"}, {"label" : "PrintLine", "tail" : "(msg: String): IO[Unit]", "member" : "fpinscala.iomonad.IO1.PrintLine", "link" : "fpinscala\/iomonad\/IO1$.html#PrintLine(msg:String):fpinscala.iomonad.IO1.IO[Unit]", "kind" : "def"}, {"label" : "ReadLine", "tail" : "(): IO[String]", "member" : "fpinscala.iomonad.IO1.ReadLine", "link" : "fpinscala\/iomonad\/IO1$.html#ReadLine:fpinscala.iomonad.IO1.IO[String]", "kind" : "def"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO1.IO", "link" : "fpinscala\/iomonad\/IO1$.html#IO", "kind" : "object"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO1.IO", "link" : "fpinscala\/iomonad\/IO1$.html#IO[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO1$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO1$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO1$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO1$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO1$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO1$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO1$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO1$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO1$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO1$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO1$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO1$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO1$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO1$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO1$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO1$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO1$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO1$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO1$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO2a", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO2a$.html", "members_object" : [{"label" : "run", "tail" : "(io: IO[A]): A", "member" : "fpinscala.iomonad.IO2a.run", "link" : "fpinscala\/iomonad\/IO2a$.html#run[A](io:fpinscala.iomonad.IO2a.IO[A]):A", "kind" : "def"}, {"label" : "composite", "tail" : ": IO[Unit]", "member" : "fpinscala.iomonad.IO2a.composite", "link" : "fpinscala\/iomonad\/IO2a$.html#composite:fpinscala.iomonad.IO2a.IO[Unit]", "kind" : "val"}, {"label" : "actions", "tail" : ": Stream[IO[Unit]]", "member" : "fpinscala.iomonad.IO2a.actions", "link" : "fpinscala\/iomonad\/IO2a$.html#actions:Stream[fpinscala.iomonad.IO2a.IO[Unit]]", "kind" : "val"}, {"label" : "p", "tail" : ": IO[Nothing]", "member" : "fpinscala.iomonad.IO2a.p", "link" : "fpinscala\/iomonad\/IO2a$.html#p:fpinscala.iomonad.IO2a.IO[Nothing]", "kind" : "val"}, {"label" : "printLine", "tail" : "(s: String): IO[Unit]", "member" : "fpinscala.iomonad.IO2a.printLine", "link" : "fpinscala\/iomonad\/IO2a$.html#printLine(s:String):fpinscala.iomonad.IO2a.IO[Unit]", "kind" : "def"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO2a.IO", "link" : "fpinscala\/iomonad\/IO2a$.html#IO", "kind" : "object"}, {"label" : "FlatMap", "tail" : "", "member" : "fpinscala.iomonad.IO2a.FlatMap", "link" : "fpinscala\/iomonad\/IO2a$.html#FlatMap[A,B]extendsIO2a.IO[B]withProductwithSerializable", "kind" : "case class"}, {"label" : "Suspend", "tail" : "", "member" : "fpinscala.iomonad.IO2a.Suspend", "link" : "fpinscala\/iomonad\/IO2a$.html#Suspend[A]extendsIO2a.IO[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Return", "tail" : "", "member" : "fpinscala.iomonad.IO2a.Return", "link" : "fpinscala\/iomonad\/IO2a$.html#Return[A]extendsIO2a.IO[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO2a.IO", "link" : "fpinscala\/iomonad\/IO2a$.html#IO[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO2a$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO2a$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO2a$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO2a$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO2a$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO2a$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO2a$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2a$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2a$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2a$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO2a$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO2a$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO2a$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO2a$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO2a$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO2a$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO2a$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO2a$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO2a$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO2aTests", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO2aTests$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.iomonad.IO2aTests.main", "link" : "fpinscala\/iomonad\/IO2aTests$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "g", "tail" : ": (Int) => IO2a.IO[Int]", "member" : "fpinscala.iomonad.IO2aTests.g", "link" : "fpinscala\/iomonad\/IO2aTests$.html#g:Int=>fpinscala.iomonad.IO2a.IO[Int]", "kind" : "val"}, {"label" : "f", "tail" : ": (Int) => IO2a.IO[Int]", "member" : "fpinscala.iomonad.IO2aTests.f", "link" : "fpinscala\/iomonad\/IO2aTests$.html#f:Int=>fpinscala.iomonad.IO2a.IO[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO2aTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO2aTests$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO2aTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO2aTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO2aTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO2aTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO2aTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2aTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2aTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2aTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO2aTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO2aTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO2aTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO2aTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO2aTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO2aTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO2aTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO2aTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO2aTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO2b", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO2b$.html", "members_object" : [{"label" : "run", "tail" : "(t: TailRec[A]): A", "member" : "fpinscala.iomonad.IO2b.run", "link" : "fpinscala\/iomonad\/IO2b$.html#run[A](t:fpinscala.iomonad.IO2b.TailRec[A]):A", "kind" : "def"}, {"label" : "TailRec", "tail" : "", "member" : "fpinscala.iomonad.IO2b.TailRec", "link" : "fpinscala\/iomonad\/IO2b$.html#TailRec", "kind" : "object"}, {"label" : "FlatMap", "tail" : "", "member" : "fpinscala.iomonad.IO2b.FlatMap", "link" : "fpinscala\/iomonad\/IO2b$.html#FlatMap[A,B]extendsIO2b.TailRec[B]withProductwithSerializable", "kind" : "case class"}, {"label" : "Suspend", "tail" : "", "member" : "fpinscala.iomonad.IO2b.Suspend", "link" : "fpinscala\/iomonad\/IO2b$.html#Suspend[A]extendsIO2b.TailRec[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Return", "tail" : "", "member" : "fpinscala.iomonad.IO2b.Return", "link" : "fpinscala\/iomonad\/IO2b$.html#Return[A]extendsIO2b.TailRec[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "TailRec", "tail" : "", "member" : "fpinscala.iomonad.IO2b.TailRec", "link" : "fpinscala\/iomonad\/IO2b$.html#TailRec[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO2b$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO2b$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO2b$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO2b$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO2b$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO2b$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO2b$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2b$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2b$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2b$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO2b$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO2b$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO2b$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO2b$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO2b$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO2b$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO2b$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO2b$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO2b$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO2bTests", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO2bTests$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "fpinscala.iomonad.IO2bTests.main", "link" : "fpinscala\/iomonad\/IO2bTests$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "g", "tail" : ": (Int) => TailRec[Int]", "member" : "fpinscala.iomonad.IO2bTests.g", "link" : "fpinscala\/iomonad\/IO2bTests$.html#g:Int=>fpinscala.iomonad.IO2b.TailRec[Int]", "kind" : "val"}, {"label" : "f", "tail" : ": (Int) => TailRec[Int]", "member" : "fpinscala.iomonad.IO2bTests.f", "link" : "fpinscala\/iomonad\/IO2bTests$.html#f:Int=>fpinscala.iomonad.IO2b.TailRec[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO2bTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO2bTests$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO2bTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO2bTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO2bTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO2bTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO2bTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2bTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2bTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2bTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO2bTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO2bTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO2bTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO2bTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO2bTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO2bTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO2bTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO2bTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO2bTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO2c", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO2c$.html", "members_object" : [{"label" : "run", "tail" : "(async: Async[A]): Par[A]", "member" : "fpinscala.iomonad.IO2c.run", "link" : "fpinscala\/iomonad\/IO2c$.html#run[A](async:fpinscala.iomonad.IO2c.Async[A]):fpinscala.parallelism.Nonblocking.Par[A]", "kind" : "def"}, {"label" : "step", "tail" : "(async: Async[A]): Async[A]", "member" : "fpinscala.iomonad.IO2c.step", "link" : "fpinscala\/iomonad\/IO2c$.html#step[A](async:fpinscala.iomonad.IO2c.Async[A]):fpinscala.iomonad.IO2c.Async[A]", "kind" : "def"}, {"label" : "Async", "tail" : "", "member" : "fpinscala.iomonad.IO2c.Async", "link" : "fpinscala\/iomonad\/IO2c$.html#Async", "kind" : "object"}, {"label" : "FlatMap", "tail" : "", "member" : "fpinscala.iomonad.IO2c.FlatMap", "link" : "fpinscala\/iomonad\/IO2c$.html#FlatMap[A,B]extendsIO2c.Async[B]withProductwithSerializable", "kind" : "case class"}, {"label" : "Suspend", "tail" : "", "member" : "fpinscala.iomonad.IO2c.Suspend", "link" : "fpinscala\/iomonad\/IO2c$.html#Suspend[A]extendsIO2c.Async[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Return", "tail" : "", "member" : "fpinscala.iomonad.IO2c.Return", "link" : "fpinscala\/iomonad\/IO2c$.html#Return[A]extendsIO2c.Async[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Async", "tail" : "", "member" : "fpinscala.iomonad.IO2c.Async", "link" : "fpinscala\/iomonad\/IO2c$.html#Async[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO2c$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO2c$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO2c$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO2c$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO2c$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO2c$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO2c$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2c$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2c$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO2c$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO2c$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO2c$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO2c$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO2c$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO2c$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO2c$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO2c$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO2c$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO2c$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.IO3", "shortDescription" : "", "object" : "fpinscala\/iomonad\/IO3$.html", "members_object" : [{"label" : "IO", "tail" : "(a: => A): IO[A]", "member" : "fpinscala.iomonad.IO3.IO", "link" : "fpinscala\/iomonad\/IO3$.html#IO[A](a:=>A):fpinscala.iomonad.IO3.IO[A]", "kind" : "def"}, {"label" : "Async", "tail" : "(cb: ((A) => Unit) => Unit): IO[A]", "member" : "fpinscala.iomonad.IO3.Async", "link" : "fpinscala\/iomonad\/IO3$.html#Async[A](cb:(A=>Unit)=>Unit):fpinscala.iomonad.IO3.IO[A]", "kind" : "def"}, {"label" : "read", "tail" : "(file: AsynchronousFileChannel, fromPosition: Long, numBytes: Int): Par[Either[Throwable, Array[Byte]]]", "member" : "fpinscala.iomonad.IO3.read", "link" : "fpinscala\/iomonad\/IO3$.html#read(file:java.nio.channels.AsynchronousFileChannel,fromPosition:Long,numBytes:Int):fpinscala.parallelism.Nonblocking.Par[Either[Throwable,Array[Byte]]]", "kind" : "def"}, {"label" : "IO", "tail" : "", "member" : "fpinscala.iomonad.IO3.IO", "link" : "fpinscala\/iomonad\/IO3$.html#IO[A]=fpinscala.iomonad.IO3.Free[fpinscala.parallelism.Nonblocking.Par,A]", "kind" : "type"}, {"label" : "runConsoleState", "tail" : "(io: ConsoleIO[A]): ConsoleState[A]", "member" : "fpinscala.iomonad.IO3.runConsoleState", "link" : "fpinscala\/iomonad\/IO3$.html#runConsoleState[A](io:fpinscala.iomonad.IO3.Console.ConsoleIO[A]):fpinscala.iomonad.IO3.ConsoleState[A]", "kind" : "def"}, {"label" : "runConsoleReader", "tail" : "(io: ConsoleIO[A]): ConsoleReader[A]", "member" : "fpinscala.iomonad.IO3.runConsoleReader", "link" : "fpinscala\/iomonad\/IO3$.html#runConsoleReader[A](io:fpinscala.iomonad.IO3.Console.ConsoleIO[A]):fpinscala.iomonad.IO3.ConsoleReader[A]", "kind" : "def"}, {"label" : "consoleToReader", "tail" : ": ~>[Console, ConsoleReader]", "member" : "fpinscala.iomonad.IO3.consoleToReader", "link" : "fpinscala\/iomonad\/IO3$.html#consoleToReader:fpinscala.iomonad.IO3.Console~>fpinscala.iomonad.IO3.ConsoleReader", "kind" : "val"}, {"label" : "consoleToState", "tail" : ": ~>[Console, ConsoleState]", "member" : "fpinscala.iomonad.IO3.consoleToState", "link" : "fpinscala\/iomonad\/IO3$.html#consoleToState:fpinscala.iomonad.IO3.Console~>fpinscala.iomonad.IO3.ConsoleState", "kind" : "val"}, {"label" : "ConsoleReader", "tail" : "", "member" : "fpinscala.iomonad.IO3.ConsoleReader", "link" : "fpinscala\/iomonad\/IO3$.html#ConsoleReader", "kind" : "object"}, {"label" : "ConsoleReader", "tail" : "", "member" : "fpinscala.iomonad.IO3.ConsoleReader", "link" : "fpinscala\/iomonad\/IO3$.html#ConsoleReader[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "ConsoleState", "tail" : "", "member" : "fpinscala.iomonad.IO3.ConsoleState", "link" : "fpinscala\/iomonad\/IO3$.html#ConsoleState", "kind" : "object"}, {"label" : "ConsoleState", "tail" : "", "member" : "fpinscala.iomonad.IO3.ConsoleState", "link" : "fpinscala\/iomonad\/IO3$.html#ConsoleState[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Buffers", "tail" : "", "member" : "fpinscala.iomonad.IO3.Buffers", "link" : "fpinscala\/iomonad\/IO3$.html#BuffersextendsProductwithSerializable", "kind" : "case class"}, {"label" : "runConsole", "tail" : "(a: Free[Console, A]): A", "member" : "fpinscala.iomonad.IO3.runConsole", "link" : "fpinscala\/iomonad\/IO3$.html#runConsole[A](a:fpinscala.iomonad.IO3.Free[fpinscala.iomonad.IO3.Console,A]):A", "kind" : "def"}, {"label" : "translate", "tail" : "(f: Free[F, A])(fg: ~>[F, G]): Free[G, A]", "member" : "fpinscala.iomonad.IO3.translate", "link" : "fpinscala\/iomonad\/IO3$.html#translate[F[_],G[_],A](f:fpinscala.iomonad.IO3.Free[F,A])(fg:F~>G):fpinscala.iomonad.IO3.Free[G,A]", "kind" : "def"}, {"label" : "runConsolePar", "tail" : "(a: Free[Console, A]): Par[A]", "member" : "fpinscala.iomonad.IO3.runConsolePar", "link" : "fpinscala\/iomonad\/IO3$.html#runConsolePar[A](a:fpinscala.iomonad.IO3.Free[fpinscala.iomonad.IO3.Console,A]):fpinscala.parallelism.Nonblocking.Par[A]", "kind" : "def"}, {"label" : "runConsoleFunction0", "tail" : "(a: Free[Console, A]): () => A", "member" : "fpinscala.iomonad.IO3.runConsoleFunction0", "link" : "fpinscala\/iomonad\/IO3$.html#runConsoleFunction0[A](a:fpinscala.iomonad.IO3.Free[fpinscala.iomonad.IO3.Console,A]):()=>A", "kind" : "def"}, {"label" : "consoleToPar", "tail" : ": ~>[Console, Par]", "member" : "fpinscala.iomonad.IO3.consoleToPar", "link" : "fpinscala\/iomonad\/IO3$.html#consoleToPar:fpinscala.iomonad.IO3.Console~>fpinscala.parallelism.Nonblocking.Par", "kind" : "val"}, {"label" : "consoleToFunction0", "tail" : ": ~>[Console, Function0]", "member" : "fpinscala.iomonad.IO3.consoleToFunction0", "link" : "fpinscala\/iomonad\/IO3$.html#consoleToFunction0:fpinscala.iomonad.IO3.Console~>Function0", "kind" : "val"}, {"label" : "runFree", "tail" : "(free: Free[F, A])(t: ~>[F, G])(G: Monad[G]): G[A]", "member" : "fpinscala.iomonad.IO3.runFree", "link" : "fpinscala\/iomonad\/IO3$.html#runFree[F[_],G[_],A](free:fpinscala.iomonad.IO3.Free[F,A])(t:F~>G)(implicitG:fpinscala.iomonad.Monad[G]):G[A]", "kind" : "def"}, {"label" : "parMonad", "tail" : ": Monad[Par]", "member" : "fpinscala.iomonad.IO3.parMonad", "link" : "fpinscala\/iomonad\/IO3$.html#parMonad:fpinscala.iomonad.Monad[fpinscala.parallelism.Nonblocking.Par]", "kind" : "implicit val"}, {"label" : "function0Monad", "tail" : ": Monad[Function0]", "member" : "fpinscala.iomonad.IO3.function0Monad", "link" : "fpinscala\/iomonad\/IO3$.html#function0Monad:fpinscala.iomonad.Monad[Function0]", "kind" : "implicit val"}, {"label" : "~>", "tail" : "", "member" : "fpinscala.iomonad.IO3.~>", "link" : "fpinscala\/iomonad\/IO3$.html#~>[F[_],G[_]]=fpinscala.iomonad.IO3.Translate[F,G]", "kind" : "type"}, {"label" : "Translate", "tail" : "", "member" : "fpinscala.iomonad.IO3.Translate", "link" : "fpinscala\/iomonad\/IO3$.html#Translate[F[_],G[_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Console", "tail" : "", "member" : "fpinscala.iomonad.IO3.Console", "link" : "fpinscala\/iomonad\/IO3$.html#Console", "kind" : "object"}, {"label" : "PrintLine", "tail" : "", "member" : "fpinscala.iomonad.IO3.PrintLine", "link" : "fpinscala\/iomonad\/IO3$.html#PrintLineextendsIO3.Console[Unit]withProductwithSerializable", "kind" : "case class"}, {"label" : "ReadLine", "tail" : "", "member" : "fpinscala.iomonad.IO3.ReadLine", "link" : "fpinscala\/iomonad\/IO3$.html#ReadLine", "kind" : "object"}, {"label" : "Console", "tail" : "", "member" : "fpinscala.iomonad.IO3.Console", "link" : "fpinscala\/iomonad\/IO3$.html#Console[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "step", "tail" : "(a: Free[F, A]): Free[F, A]", "member" : "fpinscala.iomonad.IO3.step", "link" : "fpinscala\/iomonad\/IO3$.html#step[F[_],A](a:fpinscala.iomonad.IO3.Free[F,A]):fpinscala.iomonad.IO3.Free[F,A]", "kind" : "def"}, {"label" : "run", "tail" : "(a: Free[F, A])(F: Monad[F]): F[A]", "member" : "fpinscala.iomonad.IO3.run", "link" : "fpinscala\/iomonad\/IO3$.html#run[F[_],A](a:fpinscala.iomonad.IO3.Free[F,A])(implicitF:fpinscala.iomonad.Monad[F]):F[A]", "kind" : "def"}, {"label" : "runTrampoline", "tail" : "(a: Free[Function0, A]): A", "member" : "fpinscala.iomonad.IO3.runTrampoline", "link" : "fpinscala\/iomonad\/IO3$.html#runTrampoline[A](a:fpinscala.iomonad.IO3.Free[Function0,A]):A", "kind" : "def"}, {"label" : "freeMonad", "tail" : "(): Monad[[a]Free[F, a]]", "member" : "fpinscala.iomonad.IO3.freeMonad", "link" : "fpinscala\/iomonad\/IO3$.html#freeMonad[F[_]]:fpinscala.iomonad.Monad[[a]fpinscala.iomonad.IO3.Free[F,a]]", "kind" : "def"}, {"label" : "FlatMap", "tail" : "", "member" : "fpinscala.iomonad.IO3.FlatMap", "link" : "fpinscala\/iomonad\/IO3$.html#FlatMap[F[_],A,B]extendsIO3.Free[F,B]withProductwithSerializable", "kind" : "case class"}, {"label" : "Suspend", "tail" : "", "member" : "fpinscala.iomonad.IO3.Suspend", "link" : "fpinscala\/iomonad\/IO3$.html#Suspend[F[_],A]extendsIO3.Free[F,A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Return", "tail" : "", "member" : "fpinscala.iomonad.IO3.Return", "link" : "fpinscala\/iomonad\/IO3$.html#Return[F[_],A]extendsIO3.Free[F,A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Free", "tail" : "", "member" : "fpinscala.iomonad.IO3.Free", "link" : "fpinscala\/iomonad\/IO3$.html#Free[F[_],A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/IO3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/IO3$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/IO3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/IO3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/IO3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/IO3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/IO3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/IO3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/IO3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/IO3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/IO3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/IO3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/IO3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/IO3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/IO3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/IO3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/IO3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.iomonad.Monad", "trait" : "fpinscala\/iomonad\/Monad.html", "kind" : "trait", "members_trait" : [{"label" : "toMonadic", "tail" : "(a: F[A]): Monadic[F, A]", "member" : "fpinscala.iomonad.Monad.toMonadic", "link" : "fpinscala\/iomonad\/Monad.html#toMonadic[A](a:F[A]):fpinscala.iomonad.Monadic[F,A]", "kind" : "implicit def"}, {"label" : "seq", "tail" : "(f: (A) => F[B])(g: (B) => F[C]): (A) => F[C]", "member" : "fpinscala.iomonad.Monad.seq", "link" : "fpinscala\/iomonad\/Monad.html#seq[A,B,C](f:A=>F[B])(g:B=>F[C]):A=>F[C]", "kind" : "def"}, {"label" : "foreachM", "tail" : "(l: Stream[A])(f: (A) => F[Unit]): F[Unit]", "member" : "fpinscala.iomonad.Monad.foreachM", "link" : "fpinscala\/iomonad\/Monad.html#foreachM[A](l:Stream[A])(f:A=>F[Unit]):F[Unit]", "kind" : "def"}, {"label" : "foldM_", "tail" : "(l: Stream[A])(z: B)(f: (B, A) => F[B]): F[Unit]", "member" : "fpinscala.iomonad.Monad.foldM_", "link" : "fpinscala\/iomonad\/Monad.html#foldM_[A,B](l:Stream[A])(z:B)(f:(B,A)=>F[B]):F[Unit]", "kind" : "def"}, {"label" : "foldM", "tail" : "(l: Stream[A])(z: B)(f: (B, A) => F[B]): F[B]", "member" : "fpinscala.iomonad.Monad.foldM", "link" : "fpinscala\/iomonad\/Monad.html#foldM[A,B](l:Stream[A])(z:B)(f:(B,A)=>F[B]):F[B]", "kind" : "def"}, {"label" : "doWhile", "tail" : "(a: F[A])(cond: (A) => F[Boolean]): F[Unit]", "member" : "fpinscala.iomonad.Monad.doWhile", "link" : "fpinscala\/iomonad\/Monad.html#doWhile[A](a:F[A])(cond:A=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "while_", "tail" : "(a: F[Boolean])(b: F[Unit]): F[Unit]", "member" : "fpinscala.iomonad.Monad.while_", "link" : "fpinscala\/iomonad\/Monad.html#while_(a:F[Boolean])(b:F[Unit]):F[Unit]", "kind" : "def"}, {"label" : "forever", "tail" : "(a: F[A]): F[B]", "member" : "fpinscala.iomonad.Monad.forever", "link" : "fpinscala\/iomonad\/Monad.html#forever[A,B](a:F[A]):F[B]", "kind" : "def"}, {"label" : "when", "tail" : "(b: Boolean)(fa: => F[A]): F[Boolean]", "member" : "fpinscala.iomonad.Monad.when", "link" : "fpinscala\/iomonad\/Monad.html#when[A](b:Boolean)(fa:=>F[A]):F[Boolean]", "kind" : "def"}, {"label" : "skip", "tail" : "(a: F[A]): F[Unit]", "member" : "fpinscala.iomonad.Monad.skip", "link" : "fpinscala\/iomonad\/Monad.html#skip[A](a:F[A]):F[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(a: F[A])(b: B): F[B]", "member" : "fpinscala.iomonad.Monad.as", "link" : "fpinscala\/iomonad\/Monad.html#as[A,B](a:F[A])(b:B):F[B]", "kind" : "def"}, {"label" : "replicateM_", "tail" : "(n: Int)(f: F[A]): F[Unit]", "member" : "fpinscala.iomonad.Monad.replicateM_", "link" : "fpinscala\/iomonad\/Monad.html#replicateM_[A](n:Int)(f:F[A]):F[Unit]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int)(f: F[A]): F[List[A]]", "member" : "fpinscala.iomonad.Monad.replicateM", "link" : "fpinscala\/iomonad\/Monad.html#replicateM[A](n:Int)(f:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fs: F[A]*): F[Unit]", "member" : "fpinscala.iomonad.Monad.sequence_", "link" : "fpinscala\/iomonad\/Monad.html#sequence_[A](fs:F[A]*):F[Unit]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fs: Stream[F[A]]): F[Unit]", "member" : "fpinscala.iomonad.Monad.sequence_", "link" : "fpinscala\/iomonad\/Monad.html#sequence_[A](fs:Stream[F[A]]):F[Unit]", "kind" : "def"}, {"label" : "map2", "tail" : "(a: F[A], b: F[B])(f: (A, B) => C): F[C]", "member" : "fpinscala.iomonad.Monad.map2", "link" : "fpinscala\/iomonad\/Monad.html#map2[A,B,C](a:F[A],b:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "map", "tail" : "(a: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.iomonad.Monad.map", "link" : "fpinscala\/iomonad\/Monad.html#map[A,B](a:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/Monad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/Monad.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/Monad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/Monad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/Monad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/Monad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/Monad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Monad.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Monad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Monad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/Monad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/Monad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/Monad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/Monad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/Monad.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/Monad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/Monad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/Monad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/Monad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(a: F[A])(f: (A) => F[B]): F[B]", "member" : "fpinscala.iomonad.Monad.flatMap", "link" : "fpinscala\/iomonad\/Monad.html#flatMap[A,B](a:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "unit", "tail" : "(a: => A): F[A]", "member" : "fpinscala.iomonad.Monad.unit", "link" : "fpinscala\/iomonad\/Monad.html#unit[A](a:=>A):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.iomonad.Monadic", "trait" : "fpinscala\/iomonad\/Monadic.html", "kind" : "trait", "members_trait" : [{"label" : "replicateM_", "tail" : "(n: Int): F[Unit]", "member" : "fpinscala.iomonad.Monadic.replicateM_", "link" : "fpinscala\/iomonad\/Monadic.html#replicateM_(n:Int):F[Unit]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int): F[List[A]]", "member" : "fpinscala.iomonad.Monadic.replicateM", "link" : "fpinscala\/iomonad\/Monadic.html#replicateM(n:Int):F[List[A]]", "kind" : "def"}, {"label" : "skip", "tail" : "(): F[Unit]", "member" : "fpinscala.iomonad.Monadic.skip", "link" : "fpinscala\/iomonad\/Monadic.html#skip:F[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(b: B): F[B]", "member" : "fpinscala.iomonad.Monadic.as", "link" : "fpinscala\/iomonad\/Monadic.html#as[B](b:B):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(b: F[B])(f: (A, B) => C): F[C]", "member" : "fpinscala.iomonad.Monadic.map2", "link" : "fpinscala\/iomonad\/Monadic.html#map2[B,C](b:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "*>", "tail" : "(b: F[B]): F[B]", "member" : "fpinscala.iomonad.Monadic.*>", "link" : "fpinscala\/iomonad\/Monadic.html#*>[B](b:F[B]):F[B]", "kind" : "def"}, {"label" : "**", "tail" : "(b: F[B]): F[(A, B)]", "member" : "fpinscala.iomonad.Monadic.**", "link" : "fpinscala\/iomonad\/Monadic.html#**[B](b:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => F[B]): F[B]", "member" : "fpinscala.iomonad.Monadic.flatMap", "link" : "fpinscala\/iomonad\/Monadic.html#flatMap[B](f:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): F[B]", "member" : "fpinscala.iomonad.Monadic.map", "link" : "fpinscala\/iomonad\/Monadic.html#map[B](f:A=>B):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/Monadic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/Monadic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/Monadic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/Monadic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/Monadic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/Monadic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/Monadic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Monadic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Monadic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Monadic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/Monadic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/Monadic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/Monadic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/Monadic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/Monadic.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/Monadic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/Monadic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/Monadic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/Monadic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): F[A]", "member" : "fpinscala.iomonad.Monadic.get", "link" : "fpinscala\/iomonad\/Monadic.html#get:F[A]", "kind" : "abstract def"}, {"label" : "F", "tail" : ": Monad[F]", "member" : "fpinscala.iomonad.Monadic.F", "link" : "fpinscala\/iomonad\/Monadic.html#F:fpinscala.iomonad.Monad[F]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "fpinscala.iomonad.Task", "shortDescription" : "", "object" : "fpinscala\/iomonad\/Task$.html", "members_object" : [{"label" : "Try", "tail" : "(a: => A): Either[Throwable, A]", "member" : "fpinscala.iomonad.Task.Try", "link" : "fpinscala\/iomonad\/Task$.html#Try[A](a:=>A):Either[Throwable,A]", "kind" : "def"}, {"label" : "forkUnit", "tail" : "(a: => A): Task[A]", "member" : "fpinscala.iomonad.Task.forkUnit", "link" : "fpinscala\/iomonad\/Task$.html#forkUnit[A](a:=>A):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "fork", "tail" : "(a: => Task[A]): Task[A]", "member" : "fpinscala.iomonad.Task.fork", "link" : "fpinscala\/iomonad\/Task$.html#fork[A](a:=>fpinscala.iomonad.Task[A]):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(a: => A): Task[A]", "member" : "fpinscala.iomonad.Task.delay", "link" : "fpinscala\/iomonad\/Task$.html#delay[A](a:=>A):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "more", "tail" : "(a: => Task[A]): Task[A]", "member" : "fpinscala.iomonad.Task.more", "link" : "fpinscala\/iomonad\/Task$.html#more[A](a:=>fpinscala.iomonad.Task[A]):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "now", "tail" : "(a: A): Task[A]", "member" : "fpinscala.iomonad.Task.now", "link" : "fpinscala\/iomonad\/Task$.html#now[A](a:A):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: Throwable): Task[A]", "member" : "fpinscala.iomonad.Task.fail", "link" : "fpinscala\/iomonad\/Task$.html#fail[A](e:Throwable):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(a: Task[A])(f: (A) => Task[B]): Task[B]", "member" : "fpinscala.iomonad.Task.flatMap", "link" : "fpinscala\/iomonad\/Task$.html#flatMap[A,B](a:fpinscala.iomonad.Task[A])(f:A=>fpinscala.iomonad.Task[B]):fpinscala.iomonad.Task[B]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): Task[A]", "member" : "fpinscala.iomonad.Task.unit", "link" : "fpinscala\/iomonad\/Task$.html#unit[A](a:=>A):fpinscala.iomonad.Task[A]", "kind" : "def"}, {"label" : "toMonadic", "tail" : "(a: Task[A]): Monadic[Task, A]", "member" : "fpinscala.iomonad.Monad.toMonadic", "link" : "fpinscala\/iomonad\/Task$.html#toMonadic[A](a:F[A]):fpinscala.iomonad.Monadic[F,A]", "kind" : "implicit def"}, {"label" : "seq", "tail" : "(f: (A) => Task[B])(g: (B) => Task[C]): (A) => Task[C]", "member" : "fpinscala.iomonad.Monad.seq", "link" : "fpinscala\/iomonad\/Task$.html#seq[A,B,C](f:A=>F[B])(g:B=>F[C]):A=>F[C]", "kind" : "def"}, {"label" : "foreachM", "tail" : "(l: Stream[A])(f: (A) => Task[Unit]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.foreachM", "link" : "fpinscala\/iomonad\/Task$.html#foreachM[A](l:Stream[A])(f:A=>F[Unit]):F[Unit]", "kind" : "def"}, {"label" : "foldM_", "tail" : "(l: Stream[A])(z: B)(f: (B, A) => Task[B]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.foldM_", "link" : "fpinscala\/iomonad\/Task$.html#foldM_[A,B](l:Stream[A])(z:B)(f:(B,A)=>F[B]):F[Unit]", "kind" : "def"}, {"label" : "foldM", "tail" : "(l: Stream[A])(z: B)(f: (B, A) => Task[B]): Task[B]", "member" : "fpinscala.iomonad.Monad.foldM", "link" : "fpinscala\/iomonad\/Task$.html#foldM[A,B](l:Stream[A])(z:B)(f:(B,A)=>F[B]):F[B]", "kind" : "def"}, {"label" : "doWhile", "tail" : "(a: Task[A])(cond: (A) => Task[Boolean]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.doWhile", "link" : "fpinscala\/iomonad\/Task$.html#doWhile[A](a:F[A])(cond:A=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "while_", "tail" : "(a: Task[Boolean])(b: Task[Unit]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.while_", "link" : "fpinscala\/iomonad\/Task$.html#while_(a:F[Boolean])(b:F[Unit]):F[Unit]", "kind" : "def"}, {"label" : "forever", "tail" : "(a: Task[A]): Task[B]", "member" : "fpinscala.iomonad.Monad.forever", "link" : "fpinscala\/iomonad\/Task$.html#forever[A,B](a:F[A]):F[B]", "kind" : "def"}, {"label" : "when", "tail" : "(b: Boolean)(fa: => Task[A]): Task[Boolean]", "member" : "fpinscala.iomonad.Monad.when", "link" : "fpinscala\/iomonad\/Task$.html#when[A](b:Boolean)(fa:=>F[A]):F[Boolean]", "kind" : "def"}, {"label" : "skip", "tail" : "(a: Task[A]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.skip", "link" : "fpinscala\/iomonad\/Task$.html#skip[A](a:F[A]):F[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(a: Task[A])(b: B): Task[B]", "member" : "fpinscala.iomonad.Monad.as", "link" : "fpinscala\/iomonad\/Task$.html#as[A,B](a:F[A])(b:B):F[B]", "kind" : "def"}, {"label" : "replicateM_", "tail" : "(n: Int)(f: Task[A]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.replicateM_", "link" : "fpinscala\/iomonad\/Task$.html#replicateM_[A](n:Int)(f:F[A]):F[Unit]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int)(f: Task[A]): Task[List[A]]", "member" : "fpinscala.iomonad.Monad.replicateM", "link" : "fpinscala\/iomonad\/Task$.html#replicateM[A](n:Int)(f:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fs: Task[A]*): Task[Unit]", "member" : "fpinscala.iomonad.Monad.sequence_", "link" : "fpinscala\/iomonad\/Task$.html#sequence_[A](fs:F[A]*):F[Unit]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fs: Stream[Task[A]]): Task[Unit]", "member" : "fpinscala.iomonad.Monad.sequence_", "link" : "fpinscala\/iomonad\/Task$.html#sequence_[A](fs:Stream[F[A]]):F[Unit]", "kind" : "def"}, {"label" : "map2", "tail" : "(a: Task[A], b: Task[B])(f: (A, B) => C): Task[C]", "member" : "fpinscala.iomonad.Monad.map2", "link" : "fpinscala\/iomonad\/Task$.html#map2[A,B,C](a:F[A],b:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "map", "tail" : "(a: Task[A])(f: (A) => B): Task[B]", "member" : "fpinscala.iomonad.Monad.map", "link" : "fpinscala\/iomonad\/Task$.html#map[A,B](a:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/Task$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/Task$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/Task$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/Task$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/Task$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/Task$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/Task$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Task$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Task$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Task$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/Task$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/Task$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/iomonad\/Task$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/Task$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/iomonad\/Task$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/iomonad\/Task$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/Task$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/Task$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/Task$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "attemptRun", "tail" : "(E: ExecutorService): Either[Throwable, A]", "member" : "fpinscala.iomonad.Task.attemptRun", "link" : "fpinscala\/iomonad\/Task.html#attemptRun(implicitE:java.util.concurrent.ExecutorService):Either[Throwable,A]", "kind" : "def"}, {"label" : "run", "tail" : "(E: ExecutorService): A", "member" : "fpinscala.iomonad.Task.run", "link" : "fpinscala\/iomonad\/Task.html#run(implicitE:java.util.concurrent.ExecutorService):A", "kind" : "def"}, {"label" : "or", "tail" : "(t2: Task[B]): Task[B]", "member" : "fpinscala.iomonad.Task.or", "link" : "fpinscala\/iomonad\/Task.html#or[B>:A](t2:fpinscala.iomonad.Task[B]):fpinscala.iomonad.Task[B]", "kind" : "def"}, {"label" : "handle", "tail" : "(f: PartialFunction[Throwable, B]): Task[B]", "member" : "fpinscala.iomonad.Task.handle", "link" : "fpinscala\/iomonad\/Task.html#handle[B>:A](f:PartialFunction[Throwable,B]):fpinscala.iomonad.Task[B]", "kind" : "def"}, {"label" : "attempt", "tail" : "(): Task[Either[Throwable, A]]", "member" : "fpinscala.iomonad.Task.attempt", "link" : "fpinscala\/iomonad\/Task.html#attempt:fpinscala.iomonad.Task[Either[Throwable,A]]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Task[B]", "member" : "fpinscala.iomonad.Task.map", "link" : "fpinscala\/iomonad\/Task.html#map[B](f:A=>B):fpinscala.iomonad.Task[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Task[B]): Task[B]", "member" : "fpinscala.iomonad.Task.flatMap", "link" : "fpinscala\/iomonad\/Task.html#flatMap[B](f:A=>fpinscala.iomonad.Task[B]):fpinscala.iomonad.Task[B]", "kind" : "def"}, {"member" : "fpinscala.iomonad.Task#<init>", "error" : "unsupported entity"}, {"label" : "get", "tail" : ": IO[Either[Throwable, A]]", "member" : "fpinscala.iomonad.Task.get", "link" : "fpinscala\/iomonad\/Task.html#get:fpinscala.iomonad.IO[Either[Throwable,A]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/iomonad\/Task.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/iomonad\/Task.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/iomonad\/Task.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/iomonad\/Task.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/iomonad\/Task.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/iomonad\/Task.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/iomonad\/Task.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/iomonad\/Task.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Task.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Task.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/iomonad\/Task.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/iomonad\/Task.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/iomonad\/Task.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/iomonad\/Task.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/iomonad\/Task.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/iomonad\/Task.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/iomonad\/Task.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/iomonad\/Task.html", "kind" : "case class"}], "fpinscala.streamingio" : [{"name" : "fpinscala.streamingio.GeneralizedStreamTransducers", "shortDescription" : "", "object" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html", "members_object" : [{"label" : "Process", "tail" : "", "member" : "fpinscala.streamingio.GeneralizedStreamTransducers.Process", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#Process", "kind" : "object"}, {"label" : "Process", "tail" : "", "member" : "fpinscala.streamingio.GeneralizedStreamTransducers.Process", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#Process[F[_],O]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/streamingio\/GeneralizedStreamTransducers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.streamingio.ImperativeAndLazyIO", "shortDescription" : "", "object" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html", "members_object" : [{"label" : "lines", "tail" : "(filename: String): IO[Stream[String]]", "member" : "fpinscala.streamingio.ImperativeAndLazyIO.lines", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#lines(filename:String):fpinscala.iomonad.IO[Stream[String]]", "kind" : "def"}, {"label" : "Examples", "tail" : "", "member" : "fpinscala.streamingio.ImperativeAndLazyIO.Examples", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#Examples", "kind" : "object"}, {"label" : "linesGt40k", "tail" : "(filename: String): IO[Boolean]", "member" : "fpinscala.streamingio.ImperativeAndLazyIO.linesGt40k", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#linesGt40k(filename:String):fpinscala.iomonad.IO[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/streamingio\/ImperativeAndLazyIO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.streamingio.MonadCatch", "object" : "fpinscala\/streamingio\/MonadCatch$.html", "members_object" : [{"label" : "task", "tail" : "(): MonadCatch[Task]", "member" : "fpinscala.streamingio.MonadCatch.task", "link" : "fpinscala\/streamingio\/MonadCatch$.html#task:fpinscala.streamingio.MonadCatch[fpinscala.iomonad.Task]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/streamingio\/MonadCatch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/streamingio\/MonadCatch$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/streamingio\/MonadCatch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/streamingio\/MonadCatch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/streamingio\/MonadCatch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/streamingio\/MonadCatch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/streamingio\/MonadCatch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/MonadCatch$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/MonadCatch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/MonadCatch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/streamingio\/MonadCatch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/streamingio\/MonadCatch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/streamingio\/MonadCatch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/streamingio\/MonadCatch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/streamingio\/MonadCatch$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/streamingio\/MonadCatch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/streamingio\/MonadCatch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/streamingio\/MonadCatch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/streamingio\/MonadCatch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/streamingio\/MonadCatch.html", "kind" : "trait", "members_trait" : [{"label" : "toMonadic", "tail" : "(a: F[A]): Monadic[F, A]", "member" : "fpinscala.iomonad.Monad.toMonadic", "link" : "fpinscala\/streamingio\/MonadCatch.html#toMonadic[A](a:F[A]):fpinscala.iomonad.Monadic[F,A]", "kind" : "implicit def"}, {"label" : "seq", "tail" : "(f: (A) => F[B])(g: (B) => F[C]): (A) => F[C]", "member" : "fpinscala.iomonad.Monad.seq", "link" : "fpinscala\/streamingio\/MonadCatch.html#seq[A,B,C](f:A=>F[B])(g:B=>F[C]):A=>F[C]", "kind" : "def"}, {"label" : "foreachM", "tail" : "(l: Stream[A])(f: (A) => F[Unit]): F[Unit]", "member" : "fpinscala.iomonad.Monad.foreachM", "link" : "fpinscala\/streamingio\/MonadCatch.html#foreachM[A](l:Stream[A])(f:A=>F[Unit]):F[Unit]", "kind" : "def"}, {"label" : "foldM_", "tail" : "(l: Stream[A])(z: B)(f: (B, A) => F[B]): F[Unit]", "member" : "fpinscala.iomonad.Monad.foldM_", "link" : "fpinscala\/streamingio\/MonadCatch.html#foldM_[A,B](l:Stream[A])(z:B)(f:(B,A)=>F[B]):F[Unit]", "kind" : "def"}, {"label" : "foldM", "tail" : "(l: Stream[A])(z: B)(f: (B, A) => F[B]): F[B]", "member" : "fpinscala.iomonad.Monad.foldM", "link" : "fpinscala\/streamingio\/MonadCatch.html#foldM[A,B](l:Stream[A])(z:B)(f:(B,A)=>F[B]):F[B]", "kind" : "def"}, {"label" : "doWhile", "tail" : "(a: F[A])(cond: (A) => F[Boolean]): F[Unit]", "member" : "fpinscala.iomonad.Monad.doWhile", "link" : "fpinscala\/streamingio\/MonadCatch.html#doWhile[A](a:F[A])(cond:A=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "while_", "tail" : "(a: F[Boolean])(b: F[Unit]): F[Unit]", "member" : "fpinscala.iomonad.Monad.while_", "link" : "fpinscala\/streamingio\/MonadCatch.html#while_(a:F[Boolean])(b:F[Unit]):F[Unit]", "kind" : "def"}, {"label" : "forever", "tail" : "(a: F[A]): F[B]", "member" : "fpinscala.iomonad.Monad.forever", "link" : "fpinscala\/streamingio\/MonadCatch.html#forever[A,B](a:F[A]):F[B]", "kind" : "def"}, {"label" : "when", "tail" : "(b: Boolean)(fa: => F[A]): F[Boolean]", "member" : "fpinscala.iomonad.Monad.when", "link" : "fpinscala\/streamingio\/MonadCatch.html#when[A](b:Boolean)(fa:=>F[A]):F[Boolean]", "kind" : "def"}, {"label" : "skip", "tail" : "(a: F[A]): F[Unit]", "member" : "fpinscala.iomonad.Monad.skip", "link" : "fpinscala\/streamingio\/MonadCatch.html#skip[A](a:F[A]):F[Unit]", "kind" : "def"}, {"label" : "as", "tail" : "(a: F[A])(b: B): F[B]", "member" : "fpinscala.iomonad.Monad.as", "link" : "fpinscala\/streamingio\/MonadCatch.html#as[A,B](a:F[A])(b:B):F[B]", "kind" : "def"}, {"label" : "replicateM_", "tail" : "(n: Int)(f: F[A]): F[Unit]", "member" : "fpinscala.iomonad.Monad.replicateM_", "link" : "fpinscala\/streamingio\/MonadCatch.html#replicateM_[A](n:Int)(f:F[A]):F[Unit]", "kind" : "def"}, {"label" : "replicateM", "tail" : "(n: Int)(f: F[A]): F[List[A]]", "member" : "fpinscala.iomonad.Monad.replicateM", "link" : "fpinscala\/streamingio\/MonadCatch.html#replicateM[A](n:Int)(f:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fs: F[A]*): F[Unit]", "member" : "fpinscala.iomonad.Monad.sequence_", "link" : "fpinscala\/streamingio\/MonadCatch.html#sequence_[A](fs:F[A]*):F[Unit]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fs: Stream[F[A]]): F[Unit]", "member" : "fpinscala.iomonad.Monad.sequence_", "link" : "fpinscala\/streamingio\/MonadCatch.html#sequence_[A](fs:Stream[F[A]]):F[Unit]", "kind" : "def"}, {"label" : "map2", "tail" : "(a: F[A], b: F[B])(f: (A, B) => C): F[C]", "member" : "fpinscala.iomonad.Monad.map2", "link" : "fpinscala\/streamingio\/MonadCatch.html#map2[A,B,C](a:F[A],b:F[B])(f:(A,B)=>C):F[C]", "kind" : "def"}, {"label" : "map", "tail" : "(a: F[A])(f: (A) => B): F[B]", "member" : "fpinscala.iomonad.Monad.map", "link" : "fpinscala\/streamingio\/MonadCatch.html#map[A,B](a:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/streamingio\/MonadCatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/streamingio\/MonadCatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/streamingio\/MonadCatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/streamingio\/MonadCatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/streamingio\/MonadCatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/streamingio\/MonadCatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/streamingio\/MonadCatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/MonadCatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/MonadCatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/MonadCatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/streamingio\/MonadCatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/streamingio\/MonadCatch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/streamingio\/MonadCatch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/streamingio\/MonadCatch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/streamingio\/MonadCatch.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/streamingio\/MonadCatch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/streamingio\/MonadCatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/streamingio\/MonadCatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/streamingio\/MonadCatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fail", "tail" : "(t: Throwable): F[A]", "member" : "fpinscala.streamingio.MonadCatch.fail", "link" : "fpinscala\/streamingio\/MonadCatch.html#fail[A](t:Throwable):F[A]", "kind" : "abstract def"}, {"label" : "attempt", "tail" : "(a: F[A]): F[Either[Throwable, A]]", "member" : "fpinscala.streamingio.MonadCatch.attempt", "link" : "fpinscala\/streamingio\/MonadCatch.html#attempt[A](a:F[A]):F[Either[Throwable,A]]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(a: F[A])(f: (A) => F[B]): F[B]", "member" : "fpinscala.iomonad.Monad.flatMap", "link" : "fpinscala\/streamingio\/MonadCatch.html#flatMap[A,B](a:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "unit", "tail" : "(a: => A): F[A]", "member" : "fpinscala.iomonad.Monad.unit", "link" : "fpinscala\/streamingio\/MonadCatch.html#unit[A](a:=>A):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "fpinscala.streamingio.ProcessTest", "shortDescription" : "", "object" : "fpinscala\/streamingio\/ProcessTest$.html", "members_object" : [{"label" : "p2", "tail" : ": Process[IO, Int]", "member" : "fpinscala.streamingio.ProcessTest.p2", "link" : "fpinscala\/streamingio\/ProcessTest$.html#p2:fpinscala.streamingio.GeneralizedStreamTransducers.Process[fpinscala.iomonad.IO,Int]", "kind" : "val"}, {"label" : "p", "tail" : ": Process[IO, Int]", "member" : "fpinscala.streamingio.ProcessTest.p", "link" : "fpinscala\/streamingio\/ProcessTest$.html#p:fpinscala.streamingio.GeneralizedStreamTransducers.Process[fpinscala.iomonad.IO,Int]", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "fpinscala\/streamingio\/ProcessTest$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "fpinscala\/streamingio\/ProcessTest$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "fpinscala\/streamingio\/ProcessTest$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "fpinscala\/streamingio\/ProcessTest$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/streamingio\/ProcessTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/streamingio\/ProcessTest$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/streamingio\/ProcessTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/streamingio\/ProcessTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/streamingio\/ProcessTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/streamingio\/ProcessTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/streamingio\/ProcessTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/ProcessTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/ProcessTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/ProcessTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/streamingio\/ProcessTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/streamingio\/ProcessTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/streamingio\/ProcessTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/streamingio\/ProcessTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/streamingio\/ProcessTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/streamingio\/ProcessTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/streamingio\/ProcessTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/streamingio\/ProcessTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/streamingio\/ProcessTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.streamingio.SimpleStreamTransducers", "shortDescription" : "", "object" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html", "members_object" : [{"label" : "Process", "tail" : "", "member" : "fpinscala.streamingio.SimpleStreamTransducers.Process", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#Process", "kind" : "object"}, {"label" : "Process", "tail" : "", "member" : "fpinscala.streamingio.SimpleStreamTransducers.Process", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#Process[I,O]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/streamingio\/SimpleStreamTransducers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "fpinscala" : [], "fpinscala.errorhandling" : [{"name" : "fpinscala.errorhandling.Either", "object" : "fpinscala\/errorhandling\/Either$.html", "members_object" : [{"label" : "Try", "tail" : "(a: => A): Either[Exception, A]", "member" : "fpinscala.errorhandling.Either.Try", "link" : "fpinscala\/errorhandling\/Either$.html#Try[A](a:=>A):fpinscala.errorhandling.Either[Exception,A]", "kind" : "def"}, {"label" : "safeDiv", "tail" : "(x: Int, y: Int): Either[Exception, Int]", "member" : "fpinscala.errorhandling.Either.safeDiv", "link" : "fpinscala\/errorhandling\/Either$.html#safeDiv(x:Int,y:Int):fpinscala.errorhandling.Either[Exception,Int]", "kind" : "def"}, {"label" : "mean", "tail" : "(xs: IndexedSeq[Double]): Either[String, Double]", "member" : "fpinscala.errorhandling.Either.mean", "link" : "fpinscala\/errorhandling\/Either$.html#mean(xs:IndexedSeq[Double]):fpinscala.errorhandling.Either[String,Double]", "kind" : "def"}, {"label" : "sequence", "tail" : "(es: List[Either[E, A]]): Either[E, List[A]]", "member" : "fpinscala.errorhandling.Either.sequence", "link" : "fpinscala\/errorhandling\/Either$.html#sequence[E,A](es:List[fpinscala.errorhandling.Either[E,A]]):fpinscala.errorhandling.Either[E,List[A]]", "kind" : "def"}, {"label" : "traverse", "tail" : "(es: List[A])(f: (A) => Either[E, B]): Either[E, List[B]]", "member" : "fpinscala.errorhandling.Either.traverse", "link" : "fpinscala\/errorhandling\/Either$.html#traverse[E,A,B](es:List[A])(f:A=>fpinscala.errorhandling.Either[E,B]):fpinscala.errorhandling.Either[E,List[B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Either$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Either$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Either$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Either$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Either$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Either$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Either$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Either$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Either$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Either$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Either$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Either$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/errorhandling\/Either$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Either$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/errorhandling\/Either$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/errorhandling\/Either$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Either$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Either$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Either$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/errorhandling\/Either.html", "kind" : "trait", "members_trait" : [{"label" : "map2", "tail" : "(b: Either[EE, B])(f: (A, B) => C): Either[EE, C]", "member" : "fpinscala.errorhandling.Either.map2", "link" : "fpinscala\/errorhandling\/Either.html#map2[EE>:E,B,C](b:fpinscala.errorhandling.Either[EE,B])(f:(A,B)=>C):fpinscala.errorhandling.Either[EE,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(b: => Either[EE, B]): Either[EE, B]", "member" : "fpinscala.errorhandling.Either.orElse", "link" : "fpinscala\/errorhandling\/Either.html#orElse[EE>:E,B>:A](b:=>fpinscala.errorhandling.Either[EE,B]):fpinscala.errorhandling.Either[EE,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Either[EE, B]): Either[EE, B]", "member" : "fpinscala.errorhandling.Either.flatMap", "link" : "fpinscala\/errorhandling\/Either.html#flatMap[EE>:E,B](f:A=>fpinscala.errorhandling.Either[EE,B]):fpinscala.errorhandling.Either[EE,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Either[E, B]", "member" : "fpinscala.errorhandling.Either.map", "link" : "fpinscala\/errorhandling\/Either.html#map[B](f:A=>B):fpinscala.errorhandling.Either[E,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Either.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Either.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Either.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Either.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Either.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Either.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Either.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Either.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Either.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Either.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Either.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Either.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/errorhandling\/Either.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Either.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/errorhandling\/Either.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/errorhandling\/Either.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Either.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Either.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Either.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.errorhandling.Left", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.errorhandling.Left#<init>", "error" : "unsupported entity"}, {"label" : "get", "tail" : ": E", "member" : "fpinscala.errorhandling.Left.get", "link" : "fpinscala\/errorhandling\/Left.html#get:E", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/errorhandling\/Left.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "map2", "tail" : "(b: Either[EE, B])(f: (Nothing, B) => C): Either[EE, C]", "member" : "fpinscala.errorhandling.Either.map2", "link" : "fpinscala\/errorhandling\/Left.html#map2[EE>:E,B,C](b:fpinscala.errorhandling.Either[EE,B])(f:(A,B)=>C):fpinscala.errorhandling.Either[EE,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(b: => Either[EE, B]): Either[EE, B]", "member" : "fpinscala.errorhandling.Either.orElse", "link" : "fpinscala\/errorhandling\/Left.html#orElse[EE>:E,B>:A](b:=>fpinscala.errorhandling.Either[EE,B]):fpinscala.errorhandling.Either[EE,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing) => Either[EE, B]): Either[EE, B]", "member" : "fpinscala.errorhandling.Either.flatMap", "link" : "fpinscala\/errorhandling\/Left.html#flatMap[EE>:E,B](f:A=>fpinscala.errorhandling.Either[EE,B]):fpinscala.errorhandling.Either[EE,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): Either[E, B]", "member" : "fpinscala.errorhandling.Either.map", "link" : "fpinscala\/errorhandling\/Left.html#map[B](f:A=>B):fpinscala.errorhandling.Either[E,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Left.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Left.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Left.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Left.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Left.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Left.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Left.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Left.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Left.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Left.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Left.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Left.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Left.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Left.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Left.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Left.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/errorhandling\/Left.html", "kind" : "case class"}, {"name" : "fpinscala.errorhandling.None", "shortDescription" : "", "object" : "fpinscala\/errorhandling\/None$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/errorhandling\/None$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "fpinscala\/errorhandling\/None$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Nothing) => Boolean): Option[Nothing]", "member" : "fpinscala.errorhandling.Option.filter", "link" : "fpinscala\/errorhandling\/None$.html#filter(f:A=>Boolean):fpinscala.errorhandling.Option[A]", "kind" : "def"}, {"label" : "orElse", "tail" : "(ob: => Option[B]): Option[B]", "member" : "fpinscala.errorhandling.Option.orElse", "link" : "fpinscala\/errorhandling\/None$.html#orElse[B>:A](ob:=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing) => Option[B]): Option[B]", "member" : "fpinscala.errorhandling.Option.flatMap", "link" : "fpinscala\/errorhandling\/None$.html#flatMap[B](f:A=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(default: => B): B", "member" : "fpinscala.errorhandling.Option.getOrElse", "link" : "fpinscala\/errorhandling\/None$.html#getOrElse[B>:A](default:=>B):B", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): Option[B]", "member" : "fpinscala.errorhandling.Option.map", "link" : "fpinscala\/errorhandling\/None$.html#map[B](f:A=>B):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/None$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/None$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/None$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/None$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/None$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/None$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/None$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/None$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/None$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/None$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/None$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/None$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/None$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/errorhandling\/None$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/None$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/None$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/None$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "fpinscala.errorhandling.Option", "object" : "fpinscala\/errorhandling\/Option$.html", "members_object" : [{"label" : "traverse", "tail" : "(a: List[A])(f: (A) => Option[B]): Option[List[B]]", "member" : "fpinscala.errorhandling.Option.traverse", "link" : "fpinscala\/errorhandling\/Option$.html#traverse[A,B](a:List[A])(f:A=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[List[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(a: List[Option[A]]): Option[List[A]]", "member" : "fpinscala.errorhandling.Option.sequence", "link" : "fpinscala\/errorhandling\/Option$.html#sequence[A](a:List[fpinscala.errorhandling.Option[A]]):fpinscala.errorhandling.Option[List[A]]", "kind" : "def"}, {"label" : "map2", "tail" : "(a: Option[A], b: Option[B])(f: (A, B) => C): Option[C]", "member" : "fpinscala.errorhandling.Option.map2", "link" : "fpinscala\/errorhandling\/Option$.html#map2[A,B,C](a:fpinscala.errorhandling.Option[A],b:fpinscala.errorhandling.Option[B])(f:(A,B)=>C):fpinscala.errorhandling.Option[C]", "kind" : "def"}, {"label" : "variance", "tail" : "(xs: Seq[Double]): Option[Double]", "member" : "fpinscala.errorhandling.Option.variance", "link" : "fpinscala\/errorhandling\/Option$.html#variance(xs:Seq[Double]):fpinscala.errorhandling.Option[Double]", "kind" : "def"}, {"label" : "mean", "tail" : "(xs: Seq[Double]): Option[Double]", "member" : "fpinscala.errorhandling.Option.mean", "link" : "fpinscala\/errorhandling\/Option$.html#mean(xs:Seq[Double]):fpinscala.errorhandling.Option[Double]", "kind" : "def"}, {"label" : "failingFn2", "tail" : "(i: Int): Int", "member" : "fpinscala.errorhandling.Option.failingFn2", "link" : "fpinscala\/errorhandling\/Option$.html#failingFn2(i:Int):Int", "kind" : "def"}, {"label" : "failingFn", "tail" : "(i: Int): Int", "member" : "fpinscala.errorhandling.Option.failingFn", "link" : "fpinscala\/errorhandling\/Option$.html#failingFn(i:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Option$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Option$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Option$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Option$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Option$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Option$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Option$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Option$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Option$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Option$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Option$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Option$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/errorhandling\/Option$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Option$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/errorhandling\/Option$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/errorhandling\/Option$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Option$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Option$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Option$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "fpinscala\/errorhandling\/Option.html", "kind" : "trait", "members_trait" : [{"label" : "filter", "tail" : "(f: (A) => Boolean): Option[A]", "member" : "fpinscala.errorhandling.Option.filter", "link" : "fpinscala\/errorhandling\/Option.html#filter(f:A=>Boolean):fpinscala.errorhandling.Option[A]", "kind" : "def"}, {"label" : "orElse", "tail" : "(ob: => Option[B]): Option[B]", "member" : "fpinscala.errorhandling.Option.orElse", "link" : "fpinscala\/errorhandling\/Option.html#orElse[B>:A](ob:=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Option[B]): Option[B]", "member" : "fpinscala.errorhandling.Option.flatMap", "link" : "fpinscala\/errorhandling\/Option.html#flatMap[B](f:A=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(default: => B): B", "member" : "fpinscala.errorhandling.Option.getOrElse", "link" : "fpinscala\/errorhandling\/Option.html#getOrElse[B>:A](default:=>B):B", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Option[B]", "member" : "fpinscala.errorhandling.Option.map", "link" : "fpinscala\/errorhandling\/Option.html#map[B](f:A=>B):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Option.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Option.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Option.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Option.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Option.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Option.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Option.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Option.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Option.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Option.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Option.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Option.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "fpinscala\/errorhandling\/Option.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Option.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "fpinscala\/errorhandling\/Option.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "fpinscala\/errorhandling\/Option.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Option.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Option.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Option.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "fpinscala.errorhandling.Right", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.errorhandling.Right#<init>", "error" : "unsupported entity"}, {"label" : "get", "tail" : ": A", "member" : "fpinscala.errorhandling.Right.get", "link" : "fpinscala\/errorhandling\/Right.html#get:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/errorhandling\/Right.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "map2", "tail" : "(b: Either[EE, B])(f: (A, B) => C): Either[EE, C]", "member" : "fpinscala.errorhandling.Either.map2", "link" : "fpinscala\/errorhandling\/Right.html#map2[EE>:E,B,C](b:fpinscala.errorhandling.Either[EE,B])(f:(A,B)=>C):fpinscala.errorhandling.Either[EE,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(b: => Either[EE, B]): Either[EE, B]", "member" : "fpinscala.errorhandling.Either.orElse", "link" : "fpinscala\/errorhandling\/Right.html#orElse[EE>:E,B>:A](b:=>fpinscala.errorhandling.Either[EE,B]):fpinscala.errorhandling.Either[EE,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Either[EE, B]): Either[EE, B]", "member" : "fpinscala.errorhandling.Either.flatMap", "link" : "fpinscala\/errorhandling\/Right.html#flatMap[EE>:E,B](f:A=>fpinscala.errorhandling.Either[EE,B]):fpinscala.errorhandling.Either[EE,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Either[Nothing, B]", "member" : "fpinscala.errorhandling.Either.map", "link" : "fpinscala\/errorhandling\/Right.html#map[B](f:A=>B):fpinscala.errorhandling.Either[E,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Right.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Right.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Right.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Right.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Right.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Right.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Right.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Right.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Right.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Right.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Right.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Right.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Right.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Right.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Right.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Right.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/errorhandling\/Right.html", "kind" : "case class"}, {"name" : "fpinscala.errorhandling.Some", "shortDescription" : "", "members_case class" : [{"member" : "fpinscala.errorhandling.Some#<init>", "error" : "unsupported entity"}, {"label" : "get", "tail" : ": A", "member" : "fpinscala.errorhandling.Some.get", "link" : "fpinscala\/errorhandling\/Some.html#get:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "fpinscala\/errorhandling\/Some.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): Option[A]", "member" : "fpinscala.errorhandling.Option.filter", "link" : "fpinscala\/errorhandling\/Some.html#filter(f:A=>Boolean):fpinscala.errorhandling.Option[A]", "kind" : "def"}, {"label" : "orElse", "tail" : "(ob: => Option[B]): Option[B]", "member" : "fpinscala.errorhandling.Option.orElse", "link" : "fpinscala\/errorhandling\/Some.html#orElse[B>:A](ob:=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Option[B]): Option[B]", "member" : "fpinscala.errorhandling.Option.flatMap", "link" : "fpinscala\/errorhandling\/Some.html#flatMap[B](f:A=>fpinscala.errorhandling.Option[B]):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(default: => B): B", "member" : "fpinscala.errorhandling.Option.getOrElse", "link" : "fpinscala\/errorhandling\/Some.html#getOrElse[B>:A](default:=>B):B", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Option[B]", "member" : "fpinscala.errorhandling.Option.map", "link" : "fpinscala\/errorhandling\/Some.html#map[B](f:A=>B):fpinscala.errorhandling.Option[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "fpinscala\/errorhandling\/Some.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "fpinscala\/errorhandling\/Some.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "fpinscala\/errorhandling\/Some.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "fpinscala\/errorhandling\/Some.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "fpinscala\/errorhandling\/Some.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "fpinscala\/errorhandling\/Some.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "fpinscala\/errorhandling\/Some.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Some.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Some.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "fpinscala\/errorhandling\/Some.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "fpinscala\/errorhandling\/Some.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "fpinscala\/errorhandling\/Some.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "fpinscala\/errorhandling\/Some.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "fpinscala\/errorhandling\/Some.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "fpinscala\/errorhandling\/Some.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "fpinscala\/errorhandling\/Some.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "fpinscala\/errorhandling\/Some.html", "kind" : "case class"}]};